{"version":3,"sources":["Answers/actions.ts","Categories/actions.ts","Top/actions.ts","Categories/types.ts","Categories/categoryReducer.ts","Categories/categoriesReducer.ts","Answers/reducer.ts","user/actions.ts","roleTags/actions.ts","user/reducer.ts","roleTags/reducer.ts","Top/reducer.ts","store/Store.tsx","components/AutoSuggest.tsx","formik/theme.js","common/containers/UserName.tsx","common/components/OptionName.tsx","Categories/components/CategoryForm.tsx","Categories/containers/ContainerCategoryForm.tsx","components/AutoSuggestAnswer.tsx","common/useHover.tsx","Categories/components/QuestionAnswerRow.tsx","Categories/components/QuestionAnswers.tsx","common/Select.tsx","Categories/sourceOptions.ts","Categories/statusOptions.ts","Categories/components/QuestionForm.tsx","Categories/containers/ContainerQuestionForm.tsx","Categories/components/QuestionRow.tsx","Categories/components/CategoryRow.tsx","Categories/components/CategoryList.tsx","Categories/components/CategoriesPage.tsx","Categories/components/SuportPage.tsx","Categories/containers/CategoriesPage.tsx","components/Support.tsx","Answers/components/Form.tsx","Answers/components/ListRow.tsx","Answers/components/List.tsx","Answers/components/Page.tsx","Answers/containers/Page.tsx","user/components/UserForm.tsx","user/containers/UserForm.tsx","user/components/UserRow.tsx","user/components/RoleRow.tsx","user/components/UserPage.tsx","user/containers/UsersPage.tsx","Top/components/LoginForm.tsx","Top/containers/LoginForm.tsx","components/Landing.tsx","Navig.tsx","Header.tsx","App.tsx","index.tsx"],"names":["AnswerActionTypes","parseFromJson","data","map","a","parseDates","created","Date","SUPPORT_ANSWERS","QuestionActionTypes","addAnswer","dispatch","getState","type","ADD_ANSWER","createdBy","topState","top","auth","who","userId","err","console","error","storeAnswer","answer","formMode","STORE_ANSWER","Promise","resolve","answerState","answerId","g","questions","q","categoryId","answers","assigned","TopActionTypes","getQuestion","questionId","GET_QUESTION","addQuestion","text","canEdit","ADD_QUESTION","editQuestion","EDIT_QUESTION","removeQuestion","delay","REMOVE_QUESTION","assignQuestionAnswer","tekst","ASSIGN_QUESTION_ANSWER","assignedBy","setIsDetail","isDetail","SET_IS_DETAIL","storeQuestion","question","addCategoryUnknown","STORE_QUESTION","btnSync","document","getElementById","localStorage","setItem","JSON","stringify","entity","click","state","categoriesState","categories","find","c","newCategory","initialCategory","title","storeCategory","then","reject","setTimeout","getCategory","GET_CATEGORY","addCategory","ADD_CATEGORY","editCategory","EDIT_CATEGORY","removeCategory","REMOVE_CATEGORY","category","STORE_CATEGORY","updateCategory","UPDATE_CATEGORY","addAndAssignNewAnswer","initialQuestion","words","source","status","initialCategoryState","aTypesToStore","Object","keys","reduceQuestions","categoryQuestions","action","categoryState","get","newState","myReducer","includes","set","questionIdMax","split","UPDATE_QUESTION","CANCEL_QUESTION","filter","REMOVE_QUESTION_ANSWER","qa","SUPPORT_CATEGORIES","isExpanded","initialCategoriesState","undefined","Map","categoryOptions","loading","categoryIdEditing","storeToStorage","TOGGLE_CATEGORY","getQuestions","LOAD_CATEGORIES","value","label","unshift","Math","max","questionCopy","categoryIdCopy","categoryCopy","CANCEL_CATEGORY","reduce","acc","push","initialAnswer","options","initialAnswerState","GET_ALL_ANSWERS","GET_ANSWER","length","EDIT_ANSWER","CANCEL_ANSWER","REMOVE_ANSWER","SUPPORT_TOP","UserActionTypes","parseObj","json","visited","authenticated","authenticate","loginUser","findUser","userName","user","pwd","AUTHENTICATE","AUTHENTICATE_WRONG_PWD","AUTHENTICATE_WRONG_USERNAME","parseRole","users","u","TagActionTypes","getUser","GET_USER","name","usersState","roles","role","addUser","roleId","ADD_USER","editUser","EDIT_USER","removeUser","REMOVE_USER","CREATE_OPTIONS","storeUser","STORE_USER","SUPPORT_USERS","initialUser","department","initialUserRole","color","initialUsersState","allUsers","roleOptions","userOptions","roleIdEditing","GET_ALL_USERS","log","concat","userIdMax","userRole","CANCEL_USER","ADD_ROLE","TOGGLE_ROLE","EDIT_ROLE","group","STORE_ROLE","REMOVE_ROLE","storageTagsDemo","storageTags","initialTagState","tags","initialTopState","navbarOpen","isAuthenticated","uuid","LOAD_TOP","REGISTER","REGISTER_USERNAME_EXISTS","authError","NAVBAR_TOGGLE","UNAUTHENTICATE","rootReducer","combineReducers","tagState","GET_ALL_TAGS","tag","GET_TAG","inputAutosuggest","createRef","QuestionAutosuggestMulti","Autosuggest","AutoSuggest","props","onSuggestionsClearRequested","setState","suggestions","anyWord","valueWordRegex","questionWords","valWordRegex","questionWord","test","f","getSuggestions","highlighted","window","focus","current","this","multiSection","onSuggestionsFetchRequested","bind","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderSectionTitle","getSectionSuggestions","onSuggestionHighlighted","highlightFirstSuggestion","renderInputComponent","renderSuggestionsContainer","inputProps","placeholder","onChange","e","changeEvent","event","suggestion","onSelectQuestion","params","matches","AutosuggestHighlightMatch","query","parts","AutosuggestHighlightParse","part","index","className","highlight","section","ref","restInputProps","containerProps","children","newValue","method","escapedValue","trim","replace","word","RegExp","React","COLORS","require","palx","connect","store","ownProps","id","option","Form","formik","useFormik","enableReinitialize","initialValues","validationSchema","Yup","required","onSubmit","values","saveForm","isEdit","handleSubmit","htmlFor","handleChange","onBlur","submitForm","style","width","rows","touched","errors","UserName","onClick","cancel","toLocaleDateString","onSelectCategory","add","edit","remove","height","background","padding","borderRadius","boxShadow","maxWidth","margin","AutoSuggestAnswer","setAnswerText","answersUnassigned","useHover","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","QuestionAnswerRow","hoverRef","questionAnswer","removeQuestionAnswer","selectQuestionAnswer","copyQuestionAnswer","alert","navigator","clipboard","writeText","stopPropagation","icon","faCopy","preventDefault","faWindowClose","QuestionAnswers","questionAnswers","setTekst","toLocaleTimeString","val","divDetailView","classList","zIndex","goDetail","faPlus","Select","disabled","selectedIndex","currentTarget","selectedOption","sourceOptions","statusOptions","setFieldValue","joinQuestionAnswers","sort","b","updateQuestion","QuestionRow","faEdit","CategoryRow","toggleCategory","marginLeft","faCaretDown","faCaretRight","size","CategoryList","inputEl","select","paddingBottom","textAlign","target","defaultValue","Page","useParams","open","Container","fluid","Row","border","Col","md","lg","backgroundColor","marginTop","ContainerQuestionForm","ContainerCategoryForm","SupportPage","display","mapStateToProps","tagOptions","tagId","mapDispatchToProps","CategoriesPage","supporter","div","querySelector","setAttribute","Support","marginBlockStart","marginBlockEnd","fontSize","AnswerForm","ListRow","usedAnswers","List","slug","getUsedAnswers","editAnswer","removeAnswer","onSelectUser","userRoleId","UserRow","RoleRow","toggleRole","editRole","removeRole","UserPage","userRoles","addRole","storeRole","navigate","useNavigate","min","isRegister","handleBlur","maxLength","login","CANCEL","alignItems","justifyContent","Landing","signOut","href","faSurprise","faQuestion","faAnchor","faUserFriends","faHome","setOpen","signIn","register","Navbar","as","bg","expand","Button","variant","faAngleDoubleLeft","faAngleDoubleRight","Brand","Toggle","Collapse","FormControl","Nav","maxHeight","navbarScroll","Link","faUser","faCog","NavDropdown","Item","Divider","toggleNavbar","checkAuthentication","mainMd","setMainMd","mainLg","setMainLg","app","in","dimension","onEnter","onEntering","onEntered","onExit","onExiting","onExited","path","element","UsersPage","clear","createStore","applyMiddleware","thunk","loadedFromStorage","sCategories","getItem","categoriesJson","parse","forEach","sQuestions","sAnswers","parsed","sUserRoles","s","sTags","evt","detail","treatFirstUserAsTheOwner","res","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a3cda341.chunk.js","sourcesContent":["// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Answer Typing\r\nimport { IAnswer, IAnswerState, IAnswerJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\n\r\nimport data from \"./data.json\"\r\nconst parseFromJson = (): IAnswer[] => {\r\n\treturn data.map(a => parseDates(a))\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IAnswerJson[]) : IAnswer[] =>  {\r\n\treturn arr.map(a => parseDates(a));\r\n}\r\n\r\nconst parseDates = (a: IAnswerJson): IAnswer => ({\r\n\t...a, \r\n\tcreated: new Date(a.created)\r\n})\r\n\r\n// localStorage\r\nexport const SUPPORT_ANSWERS = 'SUPPORT_ANSWERS';\r\n \r\n// Create Action Constants\r\nexport enum AnswerActionTypes {\r\n  GET_ALL_ANSWERS = 'GET_ALL_ANSWERS',\r\n  GET_ANSWER = 'GET_ANSWER',\r\n  ADD_ANSWER = 'ADD_ANSWER',\r\n  EDIT_ANSWER = 'EDIT_ANSWER',\r\n  REMOVE_ANSWER = 'REMOVE_ANSWER',\r\n  STORE_ANSWER = 'STORE_ANSWER',\r\n  CANCEL_ANSWER = 'CANCEL_ANSWER'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: AnswerActionTypes.GET_ALL_ANSWERS;\r\n\tanswers: IAnswer[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: AnswerActionTypes.GET_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: AnswerActionTypes.ADD_ANSWER;\r\n\tcreatedBy: number\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: AnswerActionTypes.EDIT_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: AnswerActionTypes.REMOVE_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tanswer: IAnswer;\r\n\tassignToQuestion?: boolean\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: AnswerActionTypes.CANCEL_ANSWER;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type AnswerActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllAnswers: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet answers: IAnswer[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sAnswers = localStorage.getItem(SUPPORT_ANSWERS);\r\n\t\t\t\tconsole.log('SAnswers',  sAnswers)\r\n\t\t\t\tif (sAnswers !== null) {\r\n\t\t\t\t\tconst parsed = JSON.parse(sAnswers);\r\n\t\t\t\t\tanswers = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tanswers = parseFromJson();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = parseFromJson();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ALL_ANSWERS,\r\n\t\t\t\tanswers\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAnswer: ActionCreator<any> = () => {\r\n  return (dispatch: Dispatch, getState: () => IAppState) => {\r\n    try {\r\n      dispatch({\r\n        type: AnswerActionTypes.ADD_ANSWER,\r\n\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\t\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGet>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IEdit>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.EDIT_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.REMOVE_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState ): Promise<any> => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.resolve(getState().answerState.answer!.answerId)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelAnswer: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t  try {\r\n\t\t dispatch({\r\n\t\t\ttype: AnswerActionTypes.CANCEL_ANSWER\r\n\t\t });\r\n\t  } catch (err) {\r\n\t\t console.error(err);\r\n\t  }\r\n\t};\r\n };\r\n \r\n\r\n// const addAnswerToLocalStorage = (answer: IAnswer): Promise<any> => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tresolve({\r\n// \t\t\t\t'status': 200,\r\n// \t\t\t\t'content-type': 'application/json',\r\n// \t\t\t\t'data' : {\r\n// \t\t\t\t'results': answer\r\n// \t\t\t\t}\r\n// \t\t\t})\r\n// \t\t}, 50)\r\n// \t})\r\n// }\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import Question Typing\r\nimport { IQuestion, ICategory, ICategoryJson, ICategoriesState, IQuestionJson, ICategoryState } from './types';\r\n\r\nimport { addAnswer, AnswerActionTypes, storeAnswer } from '../Answers/actions'\r\nimport { IAnswer, IAnswerState } from '../Answers/types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { initialCategory, SUPPORT_CATEGORIES } from './categoriesReducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { reduceQuestions } from './categoryReducer';\r\n\r\nconst parseFromJson = (): ICategory[] => {\r\n\treturn data.map(g => parseDates(g));\r\n}\r\n\r\nconst parseQuestionsFromLocalStorage = (questions: IQuestionJson[]): IQuestion[] => {\r\n\treturn questions.map(q => ({\r\n\t\t...q,\r\n\t\tcategoryId: q.categoryId!,\r\n\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\tcreated: new Date(q.created)\r\n\t})\r\n\t)\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: ICategoryJson[]): ICategory[] => {\r\n\treturn arr.map(g => parseDates(g));\r\n}\r\n\r\nconst parseDates = (g: ICategoryJson): ICategory => {\r\n\treturn {\r\n\t\t...g,\r\n\t\tquestions: g.questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: g.categoryId,\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})),\r\n\t\tcreated: new Date(g.created)\r\n\t}\r\n}\r\n\r\n// Create Action Constants\r\nexport enum QuestionActionTypes {\r\n\tLOAD_CATEGORIES = 'LOAD_CATEGORIES',\r\n\tGET_QUESTION = 'GET_QUESTION',\r\n\tADD_QUESTION = 'ADD_QUESTION',\r\n\tEDIT_QUESTION = 'EDIT_QUESTION',\r\n\tREMOVE_QUESTION = 'REMOVE_QUESTION',\r\n\tSTORE_QUESTION = 'STORE_QUESTION',\r\n\tUPDATE_QUESTION = 'UPDATE_QUESTION',\r\n\tCANCEL_QUESTION = 'CANCEL_QUESTION',\r\n\t// groups\r\n\tGET_CATEGORY = 'GET_CATEGORY',\r\n\tADD_CATEGORY = 'ADD_CATEGORY',\r\n\tTOGGLE_CATEGORY = 'EXPAND_CATEGORY',\r\n\tEDIT_CATEGORY = 'EDIT_CATEGORY',\r\n\tREMOVE_CATEGORY = 'REMOVE_CATEGORY',\r\n\tSTORE_CATEGORY = 'STORE_CATEGORY',\r\n\tUPDATE_CATEGORY = 'UPDATE_CATEGORY',\r\n\tCANCEL_CATEGORY = 'CANCEL_CATEGORY',\r\n\t// question answers\r\n\tREMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER',\r\n\tASSIGN_QUESTION_ANSWER = 'ASSIGN_QUESTION_ANSWER',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n\tSET_LAST_ANSWER_ID = 'SET_LAST_ANSWER_ID'\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface ILoad {\r\n\ttype: QuestionActionTypes.LOAD_CATEGORIES;\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>\r\n}\r\n\r\n\r\nexport interface IGet {\r\n\ttype: QuestionActionTypes.GET_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: QuestionActionTypes.ADD_QUESTION;\r\n\tcreatedBy: number;\r\n\tcategoryId: number;\r\n\ttext: string;\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: QuestionActionTypes.EDIT_QUESTION;\r\n\tcategoryId: number,\r\n\tquestionId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION;\r\n\tcategoryId: number,\r\n\tquestionId: number\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: QuestionActionTypes.STORE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface IUpdate {\r\n\ttype: QuestionActionTypes.UPDATE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: QuestionActionTypes.CANCEL_QUESTION;\r\n}\r\n\r\n// group\r\n\r\nexport interface IGetCategory {\r\n\ttype: QuestionActionTypes.GET_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IAddCategory {\r\n\ttype: QuestionActionTypes.ADD_CATEGORY;\r\n\t//categoryId: number\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\nexport interface IToggleCategory {\r\n\ttype: QuestionActionTypes.TOGGLE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IEditCategory {\r\n\ttype: QuestionActionTypes.EDIT_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IRemoveCategory {\r\n\ttype: QuestionActionTypes.REMOVE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IStoreCategory {\r\n\ttype: QuestionActionTypes.STORE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n\ttype: QuestionActionTypes.UPDATE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\n// question answers\r\nexport interface IRemoveQuestionAnswer {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number\r\n}\r\n\r\nexport interface IAssignQuestionAnswer {\r\n\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\ttekst?: string\r\n}\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: QuestionActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type QuestionActions = ILoad | IGet | IAdd | IEdit | IRemove | IStore | IUpdate | ICancel |\r\n\tIGetCategory | IAddCategory | IToggleCategory | IEditCategory | IRemoveCategory | IStoreCategory | IUpdateCategory | ICancelCategory |\r\n\tIRemoveQuestionAnswer | IAssignQuestionAnswer |\r\n\tISetIsDetail |\r\n\tIAddAndAssignNewAnswer;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const loadCategories: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ILoad>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet categories: ICategory[] = [];\r\n\t\t\tlet loadedFromStorage = false;\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sCategories = localStorage.getItem(SUPPORT_CATEGORIES);\r\n\t\t\t\tif (sCategories !== null) {\r\n\t\t\t\t\t// load from storage\r\n\t\t\t\t\tconst categoriesJson = JSON.parse(sCategories);\r\n\t\t\t\t\tcategories = parseFromLocalStorage(categoriesJson);\r\n\t\t\t\t\tcategories.forEach(category => {\r\n\t\t\t\t\t\tconst sQuestions = localStorage.getItem(`CATEGORY_${category.categoryId}`);\r\n\t\t\t\t\t\tif (sQuestions) {\r\n\t\t\t\t\t\t\tconst json = JSON.parse(sQuestions);\r\n\t\t\t\t\t\t\tcategory.questions = parseQuestionsFromLocalStorage(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloadedFromStorage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\t// load from data\r\n\t\t\t\tcategories = parseFromJson();\r\n\t\t\t\tfor (let category of categories) {\r\n\t\t\t\t\tcategory.questions.forEach(q => {\r\n\t\t\t\t\t\tq.categoryId = category.categoryId;\r\n\t\t\t\t\t\tq.words = q.text.split(' ');\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlocalStorage.setItem(`CATEGORY_${category.categoryId}`, JSON.stringify(category.questions));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst categoryQuestions = new Map<number, ICategoryState>();\r\n\t\t\tfor (let category of categories) {\r\n\t\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\t\tquestions: [...category.questions]\r\n\t\t\t\t}\r\n\t\t\t\tcategoryQuestions.set(category.categoryId, categoryState);\r\n\t\t\t\tcategory.questions = [];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(categories));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.LOAD_CATEGORIES,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n// Get Question <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\ninterface IMsg {\r\n\tttype: string,\r\n\tdata: object\r\n}\r\n\r\n// https://stackoverflow.com/questions/64507379/send-message-from-web-page-to-chrome-extension\r\nconst sendMessagesToWindow = (msg: IMsg, callback = null) => {\r\n\tconst { ttype, data } = msg;\r\n\r\n\t// Can not pass the function with window.postMessage. Only JSON object can be passed.\r\n\twindow.postMessage(msg, document.location.origin);\r\n\r\n\tswitch (ttype) {\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n};\r\n\r\n\r\n\r\nexport const addQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (categoryId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_QUESTION,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEdit>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemove>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const selectQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const copyQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t// dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const assignQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number, tekst?: string) => {\r\n\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tanswerId,\r\n\t\t\t\tassignedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const storeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\tconst { categoryId } = question;\r\n\t\ttry {\r\n\t\t\t//await delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tconst btnSync = document.getElementById('btnSync');\r\n\t\t\tlocalStorage.setItem('syncAction', JSON.stringify({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\tentity: question\r\n\t\t\t}));\r\n\t\t\tbtnSync!.click();\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst addCategoryUnknown = async (state: IAppState, dispatch: Dispatch) => {\r\n\tif (state.categoriesState.categories.find(c => c.categoryId === 0))\r\n\t\treturn Promise.resolve(-1);\r\n\tconst newCategory = {\r\n\t\t...initialCategory,\r\n\t\tcategoryId: 0,\r\n\t\ttitle: 'Unknown',\r\n\t\tquestions: []\r\n\t}\r\n\treturn dispatch<any>(storeCategory(newCategory))\r\n\t\t.then((categoryId: number) => {\r\n\t\t\treturn categoryId;\r\n\t\t});\r\n}\r\n\r\nexport const updateQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IUpdate>\r\n> = (question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { categoryId } = question;\r\n\t\t\tawait delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelQuestion: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_QUESTION\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const getCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IAddCategory>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_CATEGORY\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.TOGGLE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after update, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStoreCategory>\r\n> = (category: ICategory) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\treturn Promise.resolve(category.categoryId) //getState().categoriesState.categories.length)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IStoreCategory>\r\n> = (category: ICategory) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelCategory: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_CATEGORY\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAndAssignNewAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tanswer.createdBy = getState().topState.top!.auth!.who!.userId;\r\n\t\t\tdispatch<any>(addAnswer());\r\n\t\t\tdispatch<any>(storeAnswer(answer, formMode))\r\n\t\t\t\t.then((answerId: number) => {\r\n\t\t\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId))\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Top Typing\r\nimport { ILogin, ITop, ITopJson, ITopState } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\nimport { IUser } from '../user/types';\r\nimport { findUser, getUser, storeUser } from '../user/actions';\r\n\r\n// localStorage\r\nexport const SUPPORT_TOP = 'SUPPORT_TOP';\r\n\r\n// Create Action Constants\r\nexport enum TopActionTypes {\r\n\tLOAD_TOP = \"LOAD_TOP\",\r\n\tNAVBAR_TOGGLE = 'NAVBAR_TOGGLE',\r\n\tREGISTER = 'REGISTER',\r\n\tREGISTER_USERNAME_EXISTS = 'REGISTER_USERNAME_EXISTS',\r\n\tAUTHENTICATE = 'AUTHENTICATE',\r\n\tUNAUTHENTICATE = 'UNAUTHENTICATE',\r\n\tAUTHENTICATE_WRONG_USERNAME = 'AUTHENTICATE_WRONG_USERNAME',\r\n\tAUTHENTICATE_WRONG_PWD = 'AUTHENTICATE_WRONG_PWD',\r\n\tCANCEL = 'CANCEL'\r\n}\r\n\r\n\r\nexport interface INavbarToggle {\r\n\ttype: TopActionTypes.NAVBAR_TOGGLE;\r\n}\r\n\r\nexport interface ILoadTop {\r\n\ttype: TopActionTypes.LOAD_TOP;\r\n\ttop: ITop\r\n}\r\n\r\nexport interface IRegister {\r\n\ttype: TopActionTypes.REGISTER;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IRegisterUsernameExists {\r\n\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS;\r\n}\r\n\r\nexport interface IAuthenticate {\r\n\ttype: TopActionTypes.AUTHENTICATE;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IAuthenticateWrongUsername {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME;\r\n}\r\n\r\nexport interface IAuthenticateWrongPwd {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD;\r\n}\r\n\r\nexport interface IUnAuthenticate {\r\n\ttype: TopActionTypes.UNAUTHENTICATE;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: TopActionTypes.CANCEL;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TopActions = ILoadTop |\r\n\tINavbarToggle |\r\n\tIRegister |\r\n\tIRegisterUsernameExists |\r\n\tIAuthenticate |\r\n\tIAuthenticateWrongUsername |\r\n\tIAuthenticateWrongPwd |\r\n\tIUnAuthenticate |\r\n\tICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\nconst parseFromLocalStorage = (json: ITopJson): ITop => {\r\n\treturn parseObj(json);\r\n}\r\n\r\nconst parseObj = (json: ITopJson): ITop => {\r\n\tconst { auth } = json;\r\n\tconst { who, visited, authenticated } = auth;\r\n\treturn {\r\n\t\t...json,\r\n\t\tauth: {\r\n\t\t\t...auth,\r\n\t\t\twho: {\r\n\t\t\t\t...who,\r\n\t\t\t\tcreated: new Date(who.created!)\r\n\t\t\t},\r\n\t\t\tvisited: new Date(visited),\r\n\t\t\tauthenticated: new Date(authenticated)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loadTop: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet top = undefined;\r\n\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst s = localStorage.getItem(SUPPORT_TOP);\r\n\t\t\t\tif (s !== null) {\r\n\t\t\t\t\t//const Users: IUserRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(s);\r\n\t\t\t\t\tconsole.log('parsed', parsed)\r\n\t\t\t\t\ttop = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (top) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.LOAD_TOP,\r\n\t\t\t\t\ttop\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nexport const register: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst user: IUser = {\r\n\t\t\t\t\t\t\troleId: 44, // Viewers\r\n\t\t\t\t\t\t\tuserId: 357, //-1,\r\n\t\t\t\t\t\t\tuserName: loginUser.userName,\r\n\t\t\t\t\t\t\tpwd: loginUser.pwd,\r\n\t\t\t\t\t\t\tdepartment: \"dept1\",\r\n\t\t\t\t\t\t\tcreatedBy: 0,\r\n\t\t\t\t\t\t\tcreated: new Date()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch<any>(storeUser(user, 'add'))\r\n\t\t\t\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER,\r\n\t\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const authenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tif (user.pwd === loginUser.pwd) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const unAuthenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.UNAUTHENTICATE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const cancelLogin: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.CANCEL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const navbarToggle: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.NAVBAR_TOGGLE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\nexport function checkAuthentication() {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t  const auth = await window.localStorage.getItem(\"authenticated\");\r\n\t  const formattedAuth = typeof auth === \"string\" ?\r\n\t\tJSON.parse(auth) :\r\n\t\tnull;\r\n  \r\n\t  formattedAuth ? dispatch(authenticate()) : dispatch(unauthenticate());\r\n\t};\r\n  }\r\n*/","import { IAnswer } from '../Answers/types'\r\nimport { IOption } from '../common/types';\r\nimport { IUser } from '../user/types';\r\n\r\n// Define the Question type\r\n\r\nexport interface IQuestionAnswer {\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\tassigned: Date,\r\n\ttext?: string\r\n}\r\n\r\nexport interface IQuestionAnswerJson extends Omit<IQuestionAnswer, 'assigned'> {\r\n\tassigned: string\r\n}\r\n\r\n\r\nexport interface IQuestion {\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\ttext: string,\r\n\twords?: string[],\r\n\tanswers: IQuestionAnswer[],\r\n\tsource: number,\r\n\tstatus: number,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\nexport interface IQuestionJson extends Omit<IQuestion, 'categoryId' | 'answers' | 'created'> {\r\n\tcategoryId?: number,\r\n\tanswers: IQuestionAnswerJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface ICategory {\r\n\tcategoryId: number,\r\n\ttitle: string,\r\n\tquestions: IQuestion[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\nexport interface ICategoryJson extends Omit<ICategory, 'created' | 'questions'> {\r\n\tquestions: IQuestionJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tanswers: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n };\r\n\r\n export interface ICategoriesProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[],\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tlastAnswer?: IAnswer;\r\n\tformMode: string,\r\n\tcategoryIdEditing: number,\r\n\tcanEdit: boolean,\r\n\twho: IUser,\r\n\tnavbarOpen: boolean,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => IQuestion;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n\t// groups\r\n\tonSelectCategory: (categoryId: number) => ICategory;\r\n\taddCategory: () => void;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tstoreCategory: (group: ICategory) => void;\r\n\tupdateCategory: (group: ICategory) => void;\r\n\t// question answer\r\n\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => void\r\n}\r\n\r\nexport interface ICategoryState {\r\n\tquestions: IQuestion[];\r\n}\r\n\r\n\r\n// Define the Question State\r\nexport interface ICategoriesState {\r\n\treadonly categories: ICategory[];\r\n\treadonly category: ICategory | undefined;\r\n\treadonly question: IQuestion | undefined;\r\n\tcategoryCopy?: ICategory;\r\n\tquestionCopy?: IQuestion;\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\tcategoryIdEditing: number;\r\n\tisDetail: boolean\r\n}\r\n\r\n\r\nexport interface IQuestionFormProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswers: IQuestionAnswer[];\r\n\tanswers: IAnswer[];\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (question: IQuestion, formMode: string) => void;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n\tcategoryOptions: IOption<number>[];\r\n  }\r\n\r\n  export interface ICategoryFormProps {\r\n\tcategory: ICategory | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (category: ICategory, formMode: string) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n  }\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\nimport { initialCategory } from './categoriesReducer';\r\n\r\nimport { IQuestion, ICategoryState, initialQuestion } from './types'\r\n\r\nexport const CATEGORY = 'CATEGORY';\r\n\r\n// Define the initial state\r\nexport const initialCategoryState: ICategoryState = {\r\n\tquestions: []\r\n};\r\n\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes);\r\n\t//.filter(a => a !== QuestionActionTypes.LOAD_CATEGORY);\r\n\r\nexport const reduceQuestions = (\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\taction: QuestionActions,\r\n\tcategoryId: number,\r\n\tquestionId?: number\r\n): {categoryQuestions: Map<number, ICategoryState>, question: IQuestion|undefined} => {\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\tconst newState: ICategoryState = myReducer(categoryState, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(`CATEGORY_${categoryId}`, JSON.stringify(newState.questions));\r\n\t}\r\n\tcategoryQuestions.set(categoryId, newState);\r\n\tconst question = newState.questions.find(q => q.questionId === questionId);\r\n\treturn { categoryQuestions, question }\r\n}\r\n\r\n\r\nconst myReducer: Reducer<ICategoryState, QuestionActions> = (\r\n\tstate = initialCategoryState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst question = state.questions.find(q => q.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tlet questionIdMax = 0;\r\n\t\t\tfor (let question of state.questions)\r\n\t\t\t\tif (question.questionId > questionIdMax)\r\n\t\t\t\t\tquestionIdMax = question.questionId\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId: action.categoryId,\r\n\t\t\t\t\tquestionId: questionIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst question = state.questions\r\n\t\t\t\t.find(question => question.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...state.questions, {...question}]\r\n\t\t\t\t// questions: state.questions\r\n\t\t\t\t// \t.map(q => q.questionId !== questionId\r\n\t\t\t\t// \t\t? q\r\n\t\t\t\t// \t\t: { ...question }\r\n\t\t\t\t// \t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions\r\n\t\t\t\t\t.map(q => q.questionId !== questionId\r\n\t\t\t\t\t\t? q\r\n\t\t\t\t\t\t: { ...question }\r\n\t\t\t\t\t)\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.filter(q => q.questionId !== action.questionId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== action.questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: q.answers.filter(qa => qa.answerId !== action.answerId) }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { questionId, answerId, assignedBy } = action;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: [...q.answers, { answerId, assignedBy, assigned: new Date() }] }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategory, ICategoriesState, ICategoryState } from './types'\r\nimport { reduceQuestions } from './categoryReducer'\r\nimport { createWatchCompilerHost } from 'typescript';\r\n\r\nexport const SUPPORT_CATEGORIES = 'SUPPORT_CATEGORIES';\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tanswers: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialCategory: ICategory = {\r\n\tcategoryId: 0,\r\n\ttitle: '',\r\n\tquestions: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialCategoriesState: ICategoriesState = {\r\n\tcategories: [],\r\n\tcategory: undefined,\r\n\tcategoryQuestions: new Map<number, ICategoryState>(),\r\n\tquestion: undefined,\r\n\tcategoryOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcategoryIdEditing: -1,\r\n\tisDetail: false\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_CATEGORY,\r\n\tQuestionActionTypes.TOGGLE_CATEGORY,\r\n\tQuestionActionTypes.STORE_CATEGORY,\r\n\tQuestionActionTypes.UPDATE_CATEGORY,\r\n\tQuestionActionTypes.REMOVE_CATEGORY\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const categoriesReducer: Reducer<ICategoriesState, QuestionActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(newState.categories));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst getQuestions = (categoryId: number, state: ICategoriesState): IQuestion[] => {\r\n\tconst { categoryQuestions } = state;\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\treturn categoryState.questions\r\n}\r\n\r\nconst myReducer: Reducer<ICategoriesState, QuestionActions> = (\r\n\tstate = initialCategoriesState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.LOAD_CATEGORIES: {\r\n\t\t\tconst { categories, categoryQuestions } = action;\r\n\r\n\t\t\tconst categoryOptions = categories.map(g => ({ value: g.categoryId, label: g.title }))\r\n\t\t\tcategoryOptions.unshift({ value: 0, label: 'Unknown' })\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tcategoryOptions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst questionId = Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId,\r\n\t\t\t\t\tquestionId,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId)!;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { categoryId, questionId } = question;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tlet { questionCopy } = state;\r\n\t\t\tconst { categoryId, questionId } = action.question;\r\n\t\t\tconst categoryIdCopy = questionCopy!.categoryId;\r\n\t\t\tif (action.question.categoryId === categoryIdCopy) {\r\n\t\t\t\t// category hasn't been changed\r\n\t\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tquestion\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// assing question to another group\r\n\t\t\t\t// 1) remove question from old category\r\n\t\t\t\tlet { categoryQuestions } = reduceQuestions(state.categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\t\tcategoryId: categoryIdCopy,\r\n\t\t\t\t\tquestionId\r\n\t\t\t\t}, categoryIdCopy);\r\n\t\t\t\t// 2) add question  to new category\r\n\t\t\t\tcategoryQuestions = reduceQuestions(categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION\r\n\t\t\t\t}, categoryId).categoryQuestions;\r\n\t\t\t\t//\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\t\tcase QuestionActionTypes.GET_CATEGORY: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\t//const questions = getQuestions(categoryId, state)\r\n\t\t\t//const question = questions.find(q => q.questionId === questionId);\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_CATEGORY: {\r\n\t\t\t// const group =  state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tlet categoryId = Math.max(...state.categories.map(g => g.categoryId)) + 1;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(categoryId, categoryState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategoryIdEditing: categoryId,\r\n\t\t\t\tcategory: { \r\n\t\t\t\t\t...initialCategory,\r\n\t\t\t\t\ttitle: \"New Category\",\r\n\t\t\t\t\tcategoryId \r\n\t\t\t\t},\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.TOGGLE_CATEGORY: {\r\n\t\t\tconst group = state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== action.categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_CATEGORY: {\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === action.categoryId)!\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryCopy: { ...category },\r\n\t\t\t\tcategoryIdEditing: category.categoryId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: [] //...category.questions]\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(category.categoryId, categoryState)\r\n\t\t\tcategory.questions = [];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: [...state.categories, category],\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryId, title } = category;\r\n\t\t\tlet { categoryCopy } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tcategory: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.reduce((acc: ICategory[], g) => {\r\n\t\t\t\t\tif (g.categoryId !== action.categoryId)\r\n\t\t\t\t\t\tacc.push({ ...g, questions: [...g.questions] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tAnswerActions,\r\n\tAnswerActionTypes,\r\n\tSUPPORT_ANSWERS\r\n} from './actions';\r\n\r\nimport { IAnswer, IAnswerState } from './types'\r\n\r\nconst initialAnswer: IAnswer = {\r\n\tanswerId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\toptions: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nconst initialAnswerState: IAnswerState = {\r\n\tanswers: [],\r\n\tanswer: undefined,\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\nconst aTypesToStore = Object.keys(AnswerActionTypes).filter(a => a !== AnswerActionTypes.GET_ALL_ANSWERS);\r\n\r\nexport const answerReducer: Reducer<IAnswerState, AnswerActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(newState.answers));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IAnswerState, AnswerActions> = (\r\n\tstate = initialAnswerState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase AnswerActionTypes.GET_ALL_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: action.answers.map(answer => { return { \r\n\t\t\t\t\t...answer,\r\n\t\t\t\t\twords: answer.text.split(' ') \r\n\t\t\t\t} }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.GET_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.ADD_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tanswer: {\r\n\t\t\t\t\t...initialAnswer,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tanswerId: state.answers.length === 0 \r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.EDIT_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswer: { ...answer!, words: answer!.text.split(' ') }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.STORE_ANSWER: {\r\n\t\t\tconst { answer } = action;\r\n\t\t\tlet { answerId } = answer!;\r\n\t\t\tlet answers = [];\r\n\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\tif (answerId === -1) {\r\n\t\t\t\t\tanswer.answerId = state.answers.length === 0\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1;\r\n\t\t\t\t}\r\n\t\t\t\tanswers = [...state.answers, { ...answer, words: answer.text.split(' ') }]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = state.answers.map(a => a.answerId === answerId\r\n\t\t\t\t\t? { ...answer, words: answer.text.split(' ') }\r\n\t\t\t\t\t: a)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswers,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase AnswerActionTypes.CANCEL_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.REMOVE_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tanswers: state.answers.filter(a => a.answerId !== action.answerId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// case AnswerActionTypes.STORE_ANSWERS_TO_LOCAL_STORAGE: {\r\n\t\t// \tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(state.answers));\r\n\t\t// \treturn state;\r\n\t\t// }   \t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import User Typing\r\nimport { IUser, IRole, IRoleJson, IUsersState } from './types';\r\n\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { SUPPORT_USERS } from './reducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { TopActionTypes } from '../Top/actions';\r\n\r\nconst parseFromJson = (): IRole[] => {\r\n\treturn data.map(g => {\r\n\t\treturn parseRole(g)\r\n\t})\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IRoleJson[]): IRole[] => {\r\n\treturn arr.map(g => parseRole(g));\r\n}\r\n\r\nconst parseRole = (g: IRoleJson): IRole => ({\r\n\t...g,\r\n\tusers: g.users.map(u => ({ ...u, created: new Date(u.created) })),\r\n\tcreated: new Date(g.created)\r\n})\r\n\r\n\r\n// Create Action Constants\r\nexport enum UserActionTypes {\r\n\tLOAD_USER_GROUPS = 'LOAD_USER_GROUPS',\r\n\tCREATE_OPTIONS = 'CREATE_OPTIONS',\r\n\tGET_ALL_USERS = 'GET_ALL_USERS',\r\n\tGET_USER = 'GET_USER',\r\n\tADD_USER = 'ADD_USER',\r\n\tEDIT_USER = 'EDIT_USER',\r\n\tREMOVE_USER = 'REMOVE_USER',\r\n\tSTORE_USER = 'STORE_USER',\r\n\tCANCEL_USER = 'CANCEL_USER',\r\n\t// groups\r\n\tADD_ROLE = 'ADD_ROLE',\r\n\tTOGGLE_ROLE = 'EXPAND_ROLE',\r\n\tEDIT_ROLE = 'EDIT_ROLE',\r\n\tREMOVE_ROLE = 'REMOVE_ROLE',\r\n\tSTORE_ROLE = 'STORE_ROLE',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: UserActionTypes.GET_ALL_USERS;\r\n\troles: IRole[];\r\n}\r\n\r\nexport interface ICreateOptions {\r\n\ttype: UserActionTypes.CREATE_OPTIONS;\r\n}\r\n\r\nexport interface IGet {\r\n\ttype: UserActionTypes.GET_USER;\r\n\tuserId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: UserActionTypes.ADD_USER;\r\n\tcreatedBy: number,\r\n\troleId: number,\r\n\ttext: string\r\n\t//userId: number,\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: UserActionTypes.EDIT_USER;\r\n\troleId: number,\r\n\tuserId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: UserActionTypes.REMOVE_USER;\r\n\troleId: number,\r\n\tuserId: number,\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: UserActionTypes.STORE_USER;\r\n\tuser: IUser;\r\n\tformMode: string;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: UserActionTypes.CANCEL_USER;\r\n}\r\n\r\n// group\r\nexport interface IAddRole {\r\n\ttype: UserActionTypes.ADD_ROLE;\r\n\t//roleId: number\r\n}\r\n\r\nexport interface IToggleRole {\r\n\ttype: UserActionTypes.TOGGLE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IEditRole {\r\n\ttype: UserActionTypes.EDIT_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IRemoveRole {\r\n\ttype: UserActionTypes.REMOVE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IStoreRole {\r\n\ttype: UserActionTypes.STORE_ROLE;\r\n\tgroup: IRole;\r\n}\r\n\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: UserActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type UserActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel |\r\n\tIAddRole | IToggleRole | IEditRole | IRemoveRole | IStoreRole |\r\n\tISetIsDetail | ICreateOptions;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\nexport const getAllUsers: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet roles: IRole[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sUserRoles = localStorage.getItem(SUPPORT_USERS);\r\n\t\t\t\tif (sUserRoles !== null) {\r\n\t\t\t\t\t//const Users: IRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(sUserRoles);\r\n\t\t\t\t\troles = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troles = parseFromJson()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\troles = parseFromJson()\r\n\t\t\t}\r\n\r\n\t\t\t//const response = await getUsersFromLocalStorage(); \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_ALL_USERS,\r\n\t\t\t\troles  //response.data.results,\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n// Get User <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, string, IGet>\r\n> = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_USER,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const findUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, string, IGet>\r\n> = (name: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst {usersState} = getState();\r\n\t\t\tlet user;\r\n\t\t\tfor (let role of usersState.roles) {\r\n\t\t\t\tuser = role.users.find(user => user.userName === name);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn user;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const addUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (roleId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_USER,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\troleId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEdit>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemove>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (user: IUser, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tawait delay(); \r\n\r\n\t\t\t\t// if userId == -1 nadji max\r\n\t\t\t\t// return dispatch<any>(addUser(xxx))\r\n\t\t\t\t// \t.then((categoryId: number) => {\r\n\t\t\t\t// \t\treturn categoryId;\r\n\t\t\t\t// \t});\r\n\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t\t// dodao na Zlataru\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\tuser\r\n\t\t\t\t});\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait delay();\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelUser: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.CANCEL_USER\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\n * User Roles\r\n */\r\nexport const addRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IAddRole>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_ROLE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.TOGGLE_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemoveRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_ROLE,\r\n\t\t\t\troleId: roleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IStoreRole>\r\n> = (group: IRole) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateRoleFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.STORE_ROLE,\r\n\t\t\t\tgroup\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Tag Typing\r\nimport { ITag, ITagState } from './types';\r\nimport data from \"./data.json\"\r\nconst storageTagsDemo: ITag[] = data;\r\n\r\n// Create Action Constants\r\nexport enum TagActionTypes {\r\n\tGET_ALL_TAGS = 'GET_ALL_TAGS',\r\n  \tGET_TAG = 'GET_TAG'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: TagActionTypes.GET_ALL_TAGS;\r\n\ttags: ITag[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: TagActionTypes.GET_TAG;\r\n\ttag: ITag;\r\n}\r\n\r\n// localStorage\r\nexport const SUPPORT_TAGS = 'SUPPORT_TAGS' \r\nconst storageTags: ITag[] = [\r\n]\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TagActions = IGetAll | IGet;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllTags: ActionCreator<\r\n  ThunkAction<Promise<any>, ITagState, null, IGetAll>\r\n> = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\tif (isWebStorageSupported()) {\r\n\t\t\tconst sTags = localStorage.getItem(SUPPORT_TAGS);\r\n\t\t\tif (sTags !== null) {\r\n\t\t\t\tconst Tags: ITag[] = JSON.parse(sTags);\r\n\t\t\t\tTags.map(g => storageTags.push(g))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\r\n\t\t}\r\n\r\n\t\t//const response = await getTagsFromLocalStorage(); \r\n      dispatch({\r\n        type: TagActionTypes.GET_ALL_TAGS,\r\n        tags: storageTags //response.data.results,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tUserActions,\r\n\tUserActionTypes\r\n} from './actions';\r\n\r\nimport { IUser, IRole, IUsersState } from './types'\r\n\r\nexport const SUPPORT_USERS = 'SUPPORT_USERS';\r\n\r\nexport const initialUser: IUser = {\r\n\troleId: 0,\r\n\tuserId: 0,\r\n\tuserName: '',\r\n\tpwd: '',\r\n\tdepartment: 'neki',\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialUserRole: IRole = {\r\n\troleId: 0,\r\n\ttitle: '',\r\n\tcolor: 'lightgreen',\r\n\tusers: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialUsersState: IUsersState = {\r\n\troles: [],\r\n\tuser: undefined,\r\n\tallUsers: [],\r\n\troleOptions: [],\r\n\tuserOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\troleIdEditing: -1,\r\n\tisDetail: false\r\n};\r\n\r\n\r\n/*\r\nconst getUser = (\r\n\t\t\troles: IRole[], \r\n\t\t\troleId: number, \r\n\t\t\tuserId: number) : IUser|undefined => {\r\n\tconst group = roles.find(g => g.roleId === roleId)\r\n\tif (!group)\r\n\t\treturn undefined;\r\n\r\n\tconst user = group\r\n\t\t\t\t\t\t\t.users\r\n\t\t\t\t\t\t\t.find(q => q.userId === userId);\r\n\treturn user;\r\n}\r\n*/\r\n\r\n\r\nconst aTypesToStore = Object.keys(UserActionTypes)\r\n\t.filter(a => a !== UserActionTypes.GET_ALL_USERS);\r\n\r\nexport const userReducer: Reducer<IUsersState, UserActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_USERS, JSON.stringify(newState.roles));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IUsersState, UserActions> = (\r\n\tstate = initialUsersState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase UserActionTypes.GET_ALL_USERS: {\r\n\t\t\tconst { roles } = action;\r\n\t\t\tconsole.log('roles', roles)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles\r\n\t\t\t};\r\n\t\t}\r\n\t\t//roleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t//userOptions: allUsers.map(user => ({ label: user.name, value: user.userId }))\r\n\r\n\t\tcase UserActionTypes.CREATE_OPTIONS: {\r\n\t\t\tconst {roles} = state;\r\n\t\t\tlet allUsers: IUser[] = [];\r\n\t\t\troles.map(g => {\r\n\t\t\t\t//console.log('g', g)\r\n\t\t\t\tallUsers = allUsers.concat(g.users)\r\n\t\t\t});\r\n\t\t\tconsole.log('allUsers', allUsers)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tallUsers,\r\n\t\t\t\troleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t\t\tuserOptions: allUsers.map(user => ({ label: user.userName, value: user.userId }))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.GET_USER: {\r\n\t\t\tlet user = undefined;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tuser = role.users\r\n\t\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.ADD_USER: {\r\n\t\t\tlet userIdMax = 0;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tfor (let user of role.users) \r\n\t\t\t\t\tif (user.userId > userIdMax)\r\n\t\t\t\t\t\tuserIdMax = user.userId\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tuser: { \r\n\t\t\t\t\t...initialUser, \r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\troleId: action.roleId, \r\n\t\t\t\t\tuserId: userIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_USER: {\r\n\t\t\tconst userRole = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\tconst user = userRole!.users\r\n\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tuser\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_USER: {\r\n\t\t\tconst { user, formMode } = action;\r\n\t\t\tif (formMode === 'add') { // state.formMode\r\n\t\t\t\tconsole.log(' UserActionTypes.STORE_USER user', user)\r\n\t\t\t\tif (user.roleId === 0 && !state.roles.map(g => g.roleId).includes(0)) {\r\n\t\t\t\t\tconsole.log('unisao')\r\n\t\t\t\t\t// do something\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: [\r\n\t\t\t\t\t\t\t...state.roles,\r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t...initialUserRole, \r\n\t\t\t\t\t\t\t\troleId: 0,\r\n\t\t\t\t\t\t\t\ttitle: 'Unknown',\r\n\t\t\t\t\t\t\t\tusers: [user]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\troles: state.roles.map(g => g.roleId !== user.roleId ?\r\n\t\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{ ...g, users: [...g.users, { ...user }] }\r\n\t\t\t\t\t)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { roles } = state;\r\n\t\t\t\tconst {user} = action;\r\n\t\t\t\tconst userId: number = user.roleId;\r\n\t\t\t\tconst g = roles.find(g => g.roleId === user.roleId);\r\n\t\t\t\tconst q = g!.users.find(q => q.userId === user.userId);\r\n\t\t\t\tif (q) { // change user\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users]\t}\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t...g, \r\n\t\t\t\t\t\t\t\tusers: g.users\r\n\t\t\t\t\t\t\t\t\t.map(q => q.userId !== user.userId ?\r\n\t\t\t\t\t\t\t\t\t\tq : { ...user }\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse { // assing user to another group\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users.filter(q=> q.userId !== user.userId)]\t}\r\n\t\t\t\t\t\t\t: {\t...g, users: [...g.users, { ...user } ]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.CANCEL_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuser: undefined,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId ?\r\n\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, users: g.users.filter(q => q.userId !== action.userId) }\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\r\n\t\tcase UserActionTypes.ADD_ROLE: {\r\n\t\t\tlet roleId = Math.max(...state.roles.map(g => g.roleId)) + 1\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: roleId,\r\n\t\t\t\troles: [...state.roles, { ...initialUserRole, title: \"New Section\", roleId: roleId }]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.TOGGLE_ROLE: {\r\n\t\t\tconsole.log(action)\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_ROLE: {\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: group!.roleId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: -1,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.group.roleId ?\r\n\t\t\t\t\tg\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, title: action.group.title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.reduce((acc: IRole[], g) => {\r\n\t\t\t\t\tif (g.roleId !== action.roleId)\r\n\t\t\t\t\t\tacc.push({ ...g, users: [...g.users] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  TagActions,\r\n  TagActionTypes\r\n} from './actions';\r\n\r\nimport {ITag, ITagState } from './types'\r\n\r\nconst initialTag: ITag = {\r\n\ttagId: 0,\r\n\tname: ''\r\n};\r\n\r\nconst initialTagState: ITagState = {\r\n\ttags: [],\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\n\r\nexport const tagReducer: Reducer<ITagState, TagActions> = (\r\n  state = initialTagState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n   case TagActionTypes.GET_ALL_TAGS: {\r\n\t\treturn {\r\n        ...state,\r\n        tags: action.tags.map(tag => ({...tag}) ),\r\n      };\r\n\t} \r\n\r\n \tcase TagActionTypes.GET_TAG: {\r\n      return {\r\n\t\t  ...state,\r\n        tag: action.tag\r\n      };\r\n\t}    \r\n\r\n\tdefault:\r\n   \t\treturn state;\r\n  }\r\n};","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tSUPPORT_TOP, TopActions, TopActionTypes\r\n} from './actions';\r\nimport { ITop, ITopState } from './types';\r\n\r\nconst initialTop: ITop = {\r\n\tnavbarOpen: true,\r\n\tisAuthenticated: null,\r\n\tuuid: null\r\n};\r\n\r\nconst initialTopState: ITopState = {\r\n\ttop: initialTop\r\n};\r\n\r\nconst aTypesToStore = Object.keys(TopActionTypes).filter(a => a !== TopActionTypes.LOAD_TOP);\r\n\r\nexport const topReducer: Reducer<ITopState, TopActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_TOP, JSON.stringify(newState.top));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<ITopState, TopActions> = (\r\n\tstate = initialTopState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TopActionTypes.LOAD_TOP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: action.top\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER_USERNAME_EXISTS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Username already exists, please chose another!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\r\n\r\n\t\tcase TopActionTypes.NAVBAR_TOGGLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tnavbarOpen: !state.top.navbarOpen\t\t\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.UNAUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: false,\r\n\t\t\t\t\tuuid: null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_USERNAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"User doesn't exist!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_PWD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Password doesn't match!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { categoriesReducer } from '../Categories/categoriesReducer';\r\nimport { answerReducer } from '../Answers/reducer';\r\n\r\nimport { IAnswerState } from '../Answers/types';\r\nimport { ICategoriesState } from '../Categories/types';\r\nimport { IUsersState } from '../user/types';\r\nimport { userReducer } from '../user/reducer';\r\nimport { ITagState } from '../roleTags/types';\r\nimport { tagReducer } from '../roleTags/reducer';\r\nimport { ITopState } from '../Top/types';\r\nimport { topReducer } from '../Top/reducer';\r\n\r\nexport interface IAppState {\r\n  categoriesState: ICategoriesState;\r\n  answerState: IAnswerState;\r\n  usersState: IUsersState;\r\n  tagState: ITagState;\r\n  topState: ITopState\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n  categoriesState: categoriesReducer,\r\n  answerState: answerReducer,\r\n  usersState: userReducer,\r\n  tagState: tagReducer,\r\n  topState: topReducer\r\n});\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n  return store;\r\n}","import * as React from 'react';\r\nimport { createRef } from 'react'\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\n\r\nimport { IQuestion, ICategory, ICategoryState } from '../Categories/types'\r\nimport './AutoSuggest.css'\r\n\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nlet inputAutosuggest = createRef<HTMLInputElement>();\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new(): Autosuggest<IQuestion, ICategory> };\r\n\r\nexport class AutoSuggest extends React.Component<{ \r\n\tcategories: ICategory[], \r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\ttekst: string|undefined, \r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void }, any> {\r\n\t// region Fields\r\n\r\n\tstate: any;\r\n\t//inputAutosuggest: React.RefObject<HTMLInputElement>;\r\n\t// endregion region Constructor\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.tekst || '',\r\n\t\t\tsuggestions: this.getSuggestions(''),\r\n\t\t\thighlighted: ''\r\n\t\t};\r\n\t\t//this.inputAutosuggest = createRef<HTMLInputElement>();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tsetTimeout(() => {\r\n\t\t\t//inputAutosuggest!.current!.focus();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.focus()\r\n\t\t\t\tinputAutosuggest!.current!.focus();\r\n\t\t\t}, 500)\r\n\r\n\t\t}, 500)\r\n\r\n\t\t// console.log('componentDidMount', document)\r\n\t\t// console.log(document?.getElementById('inputAutoSuggest'))\r\n\t\t//document?.getElementById('inputAutoSuggest')?.focus(); \r\n\t}\r\n\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\tconst { value, suggestions } = this.state;\r\n\r\n\t\treturn <QuestionAutosuggestMulti\r\n\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\tmultiSection={true}\r\n\t\t\tsuggestions={suggestions}\r\n\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\tonSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\tgetSuggestionValue={this.getSuggestionValue}\r\n\t\t\trenderSuggestion={this.renderSuggestion}\r\n\t\t\trenderSectionTitle={this.renderSectionTitle}\r\n\t\t\tgetSectionSuggestions={this.getSectionSuggestions}\r\n\t\t\t// onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\tonSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}\r\n\t\t\thighlightFirstSuggestion={true}\r\n\t\t\trenderInputComponent={this.renderInputComponent}\r\n\t\t\trenderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\tinputProps={{\r\n\t\t\t\tplaceholder: `Type 'promocode'`,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent)\r\n\t\t\t}}\r\n\r\n\t\t/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: []\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IQuestion>): void {\r\n\t\tconst question: IQuestion = data.suggestion;\r\n\t\t// alert(`Selected question is ${question.questionId} (${question.text}).`);\r\n\t\tthis.props.onSelectQuestion(question.categoryId, question.questionId);\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IQuestion, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{parts.map((part, index) => {\r\n\t\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={className} key={index}>\r\n\t\t\t\t\t\t\t{part.text}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSectionTitle(section: ICategory): JSX.Element {\r\n\t\treturn <strong>{section.title}</strong>;\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IQuestion>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderInputComponent(inputProps: Autosuggest.RenderInputComponentProps): JSX.Element {\r\n\t\tconst { ref, ...restInputProps } = inputProps;\r\n\t\t// if (ref !== undefined)\r\n\t\t// \tthis.inputAutosuggest = ref as React.RefObject<HTMLInputElement>;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input {...restInputProps} ref={inputAutosuggest} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSuggestionsContainer({ containerProps, children, query }: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div {...containerProps}>\r\n\t\t\t\t<span>{children}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// endregion region Event handlers\r\n\r\n\tprotected onChange(event: /*React.ChangeEvent<HTMLInputElement>*/ React.FormEvent<any>, { newValue, method }: Autosuggest.ChangeEvent): void {\r\n\t\tthis.setState({ value: newValue });\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({ value }: any): void {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: this.getSuggestions(value)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]): boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): ICategory[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i'))\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\t// return AutoSuggest.questions\t \r\n\t\t//  return this.props.categories\r\n\t\t// \t\t.map(section => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t\ttitle: section.title,\r\n\t\t// \t\t\t\t\tquestions: section\r\n\t\t// \t\t\t\t\t\t.questions\r\n\t\t// \t\t\t\t\t\t.filter(question => regex.test(question.text))\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t\t.filter(section => section.questions.length > 0);\r\n        const {categories, categoryQuestions} = this.props;\r\n\t\treturn categories\r\n\t\t\t.map(group => {\r\n\t\t\t\tconsole.log('dragica', group.categoryId, categoryQuestions.get(group.categoryId)!.questions)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tquestions: //.group.questions\r\n\t\t\t\t\t\tcategoryQuestions.get(group.categoryId)!.questions\r\n\t\t\t\t\t\t\t.filter(question => this.anyWord(valueWordRegex, question.words!))\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(section => section.questions.length > 0);\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IQuestion) {\r\n\t\treturn suggestion.text;\r\n\t}\r\n\r\n\tprotected getSectionSuggestions(section: ICategory) {\r\n\t\treturn section.questions;\r\n\t}\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\tthis.setState({\r\n\t\t\thighlighted: params.suggestion\r\n\t\t});\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","const palx = require('palx');\r\nexport const BASE_COLOR = '#666ee8';\r\nexport const COLORS = palx(BASE_COLOR);","import { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/Store';\r\nimport {OptionName}  from '../components/OptionName'\r\n\r\ninterface IOwnProps {\r\n\tid: number\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps ) => {\r\n\treturn {\r\n\t\toptions: store.usersState.userOptions,\r\n\t\tid: ownProps.id\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OptionName);\r\n","import { IOption, OptionValue } from \"../types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    id: T;\r\n};\r\n\r\nexport interface IProps {\r\n\toptions: IOption<number>[];\r\n  id: number;\r\n}\r\n\r\nexport function OptionName<T extends OptionValue>(props: Props<T>) {\r\n    const { id } = props;\r\n    const option: IOption<T>|undefined = props.options.find(option => option.value === id);\r\n    return (\r\n        <span>\r\n            {option\r\n                ? option!.label\r\n                : \"Unknown\"\r\n            }\r\n        </span>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { ICategoryFormProps } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\n//import { MultiSelect } from '../../common/MultiSelect';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\n\r\nconst Form: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const category = props.category!;\r\n  const { categoryId, title, questions, isExpanded, createdBy, created } = category;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId,\r\n      title,\r\n      questions,\r\n      isExpanded,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"categoryId\">CategoryId:</label>\r\n        {/* <input\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.categoryId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.categoryId && formik.errors.categoryId ? (\r\n          <div>{formik.errors.categoryId}</div>\r\n        ) : null} */}\r\n        <span id=\"categoryId\">{formik.values.categoryId}</span>\r\n        \r\n        <label htmlFor=\"title\">Title</label>\r\n        <textarea\r\n          id=\"title\"\r\n          name=\"title\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.title !== formik.values.title)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.title}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.title && formik.errors.title ? (\r\n          <div>{formik.errors.title}</div>\r\n        ) : null}\r\n\r\n        <br />\r\n\r\n   \r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n        {/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {/* <label htmlFor=\"features\">Features</label>\r\n        <MultiSelect\r\n          id=\"features\"\r\n          name=\"features\"\r\n          label=\"Select features...\"\r\n          options={props.featureOptions}\r\n          onChange={()=>{}} \r\n          value={[]}\r\n          // onChange={(e, value) => {\r\n          //   formik.setFieldValue(\"status\", value)\r\n          //   if (isEdit()) formik.submitForm();\r\n          // }}\r\n          // value={formik.values.status}\r\n        /> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const CategoryForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\nimport {IOption} from '../../common/types';\r\n\r\nimport {\r\n\tgetCategory, \r\n\taddCategory, \r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\tcancelCategory,\r\n\tsetIsDetail,\r\n\tQuestionActions\r\n} from '../actions'\r\n\r\nimport { CategoryForm } from '../components/CategoryForm';\r\n\r\n\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState } = store;\r\n\tconst { category, formMode } = categoriesState; \r\n\treturn {\r\n\t\tcategory,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectCategory: (categoryId: number, questionId: number) => dispatch<any>(getCategory(categoryId)),\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addCategory(categoryId, text, canEdit)),\r\n\t\tedit: (categoryId: number) => dispatch<any>(editCategory(categoryId)),\r\n\t\tremove: (categoryId: number) => dispatch<any>(removeCategory(categoryId)),\r\n\t\tsaveForm: (category: ICategory, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeCategory(category):updateCategory(category)),\r\n\t\tcancel: () => dispatch<any>(cancelCategory()),\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);\r\n","import * as React from 'react';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IAnswer }  from '../Answers/types'\r\nimport './AutoSuggest.css'\r\nimport { IQuestion } from '../Categories/types';\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new (): Autosuggest<IAnswer> };\r\n\r\ninterface IProps {\r\n\tanswersUnassigned: IAnswer[], \r\n\tquestion: IQuestion,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void\r\n\tsetAnswerText?: (val: string) => void\r\n}\r\n\r\nexport class AutoSuggestAnswer extends React.Component<IProps, any> {\r\n\r\n\tstate: any;\r\n\r\n\tconstructor(props: any) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  value: '',\r\n\t\t\t  suggestions: this.getSuggestions(''),\r\n\t\t\t  highlighted: ''\r\n\t\t };\r\n\t}\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\t const {value, suggestions} = this.state;\r\n\r\n\t\t return <QuestionAutosuggestMulti\r\n\t\t \t  onSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\t  multiSection={false}\r\n\t\t\t  suggestions={suggestions}\r\n\t\t\t  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\t  onSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\t  getSuggestionValue={this.getSuggestionValue}\r\n\t\t\t  renderSuggestion={this.renderSuggestion}\r\n\t\t\t  // onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\t  onSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}  \r\n\t\t\t  highlightFirstSuggestion={true}\r\n\t\t\t  // renderInputComponent={this.renderInputComponent}\r\n\t\t\t  renderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\t  inputProps={{\r\n\t\t\t\t\tplaceholder: `Search answers...`,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t  }}/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t  suggestions: []\r\n\t\t});\r\n\t };\r\n  \r\n  \r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IAnswer>): void {\r\n\t\t const answer: IAnswer = data.suggestion;\r\n\t\t // alert(`Selected question is ${question.answerId} (${question.text}).`);\r\n\t\t this.props.assignQuestionAnswer(\r\n\t\t\t this.props.question.categoryId,\r\n\t\t\t this.props.question.questionId, \r\n\t\t\t answer.answerId);\r\n\t\tthis.setState({\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IAnswer, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\t \r\n\t\treturn (\r\n\t\t  <span>\r\n\t\t\t {parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\t \r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>\r\n\t\t\t\t\t {part.text}\r\n\t\t\t\t  </span>\r\n\t\t\t\t);\r\n\t\t\t })}\r\n\t\t  </span>\r\n\t\t);\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IAnswer>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderSuggestionsContainer({containerProps, children, query}: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\t return (\r\n\t\t\t  <div {...containerProps}>\r\n\t\t\t\t\t<span>{children}</span>\r\n\t\t\t  </div>\r\n\t\t );\r\n\t}\r\n\t// endregion region Event handlers\r\n\tprotected onChange(event: React.FormEvent<any>, {newValue, method}: Autosuggest.ChangeEvent): void {\r\n\t\tif (this.props.setAnswerText) {\r\n\t\t\tthis.props.setAnswerText(newValue);\r\n\t\t}\r\n\t\tthis.setState({value: newValue});\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({value}: any): void {\r\n\t\t this.setState({\r\n\t\t\t  suggestions: this.getSuggestions(value)\r\n\t\t });\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]) : boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t} \r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): IAnswer[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i') )\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\treturn this.props.answersUnassigned.filter(answer => this.anyWord(valueWordRegex, answer.words!))\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IAnswer) {\r\n\t\t return suggestion.text;\r\n\t}\r\n\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\t this.setState({\r\n\t\t\t  highlighted: params.suggestion\r\n\t\t });\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover() : [React.RefObject<HTMLDivElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: false });\r\n \r\n\tconst divRef = useRef<HTMLDivElement>(null);\r\n \r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n \r\n\tuseEffect(\r\n\t  () => {\r\n\t\t const node = divRef.current;\r\n\t\t if (node) {\r\n\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n \r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t};\r\n\t\t }\r\n\t  }, [divRef.current] // Recall only if ref changes\r\n\t);\r\n \r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\n\r\n\r\ninterface IQuestionAnswerRowProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswer: IQuestionAnswer;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n}\r\n\r\nconst QuestionAnswerRow: React.FC<IQuestionAnswerRowProps> = (props: IQuestionAnswerRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, questionAnswer, selectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\tconst { answerId, text } = questionAnswer;\r\n\tconst id = `inputQuestionAnswer${answerId}`;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t{/* <input id={id} type=\"hidden\" value={questionAnswer.text}></input> */}\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"question-button\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// selectQuestionAnswer(categoryId, questionId, answerId)}\r\n\t\t\t\t\talert('No action for the time being')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{questionAnswer.text}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Copy Answer to Cliboard\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t//const input = document.querySelector<HTMLInputElement>('#' + id);\r\n\t\t\t\t\t\tif (navigator.clipboard) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`${questionAnswer.text}`) // input!.value)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Copied to clipboard successfully.');\r\n\t\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Failed to copy the text to clipboard.', err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t// copyQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tremoveQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionAnswerRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\nimport { AutoSuggestAnswer } from '../../components/AutoSuggestAnswer';\r\nimport QuestionAnswerRow from './QuestionAnswerRow';\r\n\r\ninterface IProps {\r\n\tquestion: IQuestion,\r\n\tquestionAnswers: IQuestionAnswer[],\r\n\tanswers?: IAnswer[],\r\n\tcanEdit: boolean,\r\n\tformMode: string,\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tassignQuestionAnswer?: (categoryId: number, questionId: number, answerId: number, tekst?: string) => void,\r\n\tsetAnswerText?: (val: string) => void,\r\n\tsetIsDetail: (isDetail: boolean) => void\r\n}\r\n\r\nconst QuestionAnswers: React.FC<IProps> = (props: IProps) => {\r\n\tconst { \r\n\t\tquestion, \r\n\t\tquestionAnswers, \r\n\t\tanswers, \r\n\t\tcanEdit, \r\n\t\tformMode, \r\n\t\tselectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer, \r\n\t\tassignQuestionAnswer, setIsDetail \r\n\t} = props; \r\n\tconst answersUnassigned = answers?.filter(a => !question.answers.map(a=>a.answerId).includes(a.answerId))\r\n\r\n\tconst [tekst, setTekst] = React.useState('');\r\n\tconst setAnswerText = (val: string) => {\r\n\t\tsetTekst(val);\r\n\t}\r\n\r\n\tconst assignQuestionAnswerTekst = () => {\r\n\t\tif (assignQuestionAnswer) {\r\n\t\t\t//storeAnswer({ answerId: -1, text: tekst }, 'add')\r\n\t\t\tassignQuestionAnswer(\r\n\t\t\t\tquestion.categoryId,\r\n\t\t\t\tquestion.questionId, \r\n\t\t\t\t-1,\r\n\t\t\t\ttekst\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tconst goDetail = (isDetail: boolean) => {\r\n\t\tsetIsDetail(isDetail);\r\n\r\n\t\tconst divDetailView = document.getElementById('divDetailView');\r\n\t\tdivDetailView!.classList.add('detail-view-open');\r\n\t\tdivDetailView!.style.zIndex = '3';\r\n\t\t//document.body.classList.add('hide-scroll-bar');\r\n  \t}\t\r\n\r\n\r\n    return (\r\n      <div className=\"name-container question-answers\">\r\n\t\t\t{/* { questionAnswers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers yet\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t{ questionAnswers.length > -1 && \r\n\t\t\t\t<>\r\n\t\t\t\t<table width=\"100%\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>{ questionAnswers.length === 0 ? 'No answers yet' : 'Answers'}</th>\r\n\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' && <th></th> }\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{ questionAnswers.map(qa => \r\n\t\t\t\t\t\t\t<tr key={qa.answerId}>\r\n\t\t\t\t\t\t\t\t<td className=\"name\" title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t<QuestionAnswerRow\r\n\t\t\t\t\t\t\t\t\t\tkey={qa.answerId}\r\n\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\tquestionAnswer={qa}\r\n\t\t\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{/* <td className=\"name\" title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t{qa.text}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Answer\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer!(question.categoryId, question.questionId, qa.answerId)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{canEdit && formMode !== 'display' && <tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<AutoSuggestAnswer\r\n\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\tanswersUnassigned={answersUnassigned!}\r\n\t\t\t\t\t\t\t\t\tassignQuestionAnswer={assignQuestionAnswer!}\r\n\t\t\t\t\t\t\t\t\tsetAnswerText={setAnswerText}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td width=\"35px\">\r\n\t\t\t\t\t\t\t\t<button className=\"button-edit\" title=\"Add a new Answer\" onClick={\r\n\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\tgoDetail(true);\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} color='lightblue' />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default QuestionAnswers\r\n\r\n","import React from \"react\";\r\nimport { IOption, OptionValue } from \"./types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    value: T;\r\n    onChange: (e: React.FormEvent<HTMLSelectElement>, value: T) => void;\r\n    id: string,\r\n    name: string,\r\n    disabled?: boolean\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n    const disabled = props.disabled ? true : false;\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n        const { selectedIndex } = e.currentTarget;\r\n        const selectedOption: IOption<T> = props.options[selectedIndex];\r\n        props.onChange(e, selectedOption.value);\r\n    }\r\n\r\n    return (\r\n        <select\r\n            id={props.id}\r\n            value={props.value}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n        >\r\n            {props.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n}","export const sourceOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"Gmail\", value: 1 },\r\n    { label: \"Outlook\", value: 2 },\r\n    { label: \"Phone\", value: 3 },\r\n    { label: \"Chat\", value: 4 },\r\n    { label: \"Slack\", value: 5 }\r\n]","export const statusOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"In progress\", value: 1 },\r\n    { label: \"Can't reproduce\", value: 2 },\r\n    { label: \"Blocked\", value: 3 },\r\n    { label: \"Complete\", value: 4 }\r\n]","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IQuestion, IQuestionAnswer, IQuestionFormProps } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\n\r\nimport QuestionAnswers from './QuestionAnswers'\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\n//import { MultiSelect } from '../../common/MultiSelect';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\nimport { sourceOptions } from '../sourceOptions'\r\nimport { statusOptions } from '../statusOptions'\r\n\r\n\r\nconst Form: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId: props.question.categoryId,\r\n      questionId: props.question.questionId,\r\n      text: props.question.text,\r\n      source: props.question.source,\r\n      status: props.question.status,\r\n      answers: props.question.answers,\r\n      createdBy: props.question.createdBy,\r\n      created: props.question.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"questionId\">QuestionId:</label>\r\n        {/* <input\r\n          id=\"questionId\"\r\n          name=\"questionId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.questionId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.questionId && formik.errors.questionId ? (\r\n          <div>{formik.errors.questionId}</div>\r\n        ) : null} */}\r\n        <span id=\"questionId\">{formik.values.questionId}</span>\r\n\r\n        <label htmlFor=\"categoryId\">Category</label>\r\n        <Select\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          options={props.categoryOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"categoryId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.categoryId}\r\n        />\r\n\r\n        <label htmlFor=\"text\">Name</label>\r\n        <textarea\r\n          id=\"text\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.text !== formik.values.text)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.text}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.text && formik.errors.text ? (\r\n          <div>{formik.errors.text}</div>\r\n        ) : null}\r\n\r\n        <label htmlFor=\"source\">Source</label>\r\n        <Select\r\n          id=\"source\"\r\n          name=\"source\"\r\n          options={sourceOptions}\r\n          // onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"source\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.source}\r\n        />\r\n\r\n        <br />\r\n        <QuestionAnswers\r\n          question={props.question}\r\n          questionAnswers={props.questionAnswers}\r\n          answers={props.answers}\r\n          canEdit={props.canEdit}\r\n          formMode={props.formMode}\r\n          selectQuestionAnswer={props.selectQuestionAnswer}\r\n          copyQuestionAnswer={props.copyQuestionAnswer}\r\n          removeQuestionAnswer={props.removeQuestionAnswer}\r\n          assignQuestionAnswer={props.assignQuestionAnswer}\r\n          setIsDetail={props.setIsDetail}\r\n        />\r\n        <br />\r\n\r\n        <label htmlFor=\"status\">Status</label>\r\n        <Select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          options={statusOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"status\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.status}\r\n        />\r\n\r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n        {/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {/* <label htmlFor=\"features\">Features</label>\r\n        <MultiSelect\r\n          id=\"features\"\r\n          name=\"features\"\r\n          label=\"Select features...\"\r\n          options={props.featureOptions}\r\n          onChange={()=>{}} \r\n          value={[]}\r\n          // onChange={(e, value) => {\r\n          //   formik.setFieldValue(\"status\", value)\r\n          //   if (isEdit()) formik.submitForm();\r\n          // }}\r\n          // value={formik.values.status}\r\n        /> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const QuestionForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\nimport {IOption} from '../../common/types';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tstoreQuestion,\r\n\tupdateQuestion,\r\n\tcancelQuestion,\r\n\tremoveQuestionAnswer,\r\n\tassignQuestionAnswer,\r\n\tsetIsDetail,\r\n\taddAndAssignNewAnswer,\r\n\tselectQuestionAnswer,\r\n\tcopyQuestionAnswer,\r\n\ttoggleCategory\r\n} from '../actions'\r\n\r\nimport { QuestionForm } from '../components/QuestionForm';\r\n\r\nconst joinQuestionAnswers = (question: IQuestion | undefined, answers: IAnswer[]) : IQuestionAnswer[]=> {\r\n\tif (question === undefined || question.answers.length === 0 || answers === undefined)\r\n\t\treturn [];\r\n\tconst questionAnswers = question.answers.map(qa => ({\r\n\t\t\t...qa, text: answers.find(a => a.answerId === qa.answerId)!.text\r\n\t\t})\r\n\t);\r\n\treturn questionAnswers.sort((a,b) => a.assigned < b.assigned ? 1 : -1);\r\n}\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, answerState } = store;\r\n\tconst { category, question, categoryOptions, formMode } = categoriesState; \r\n\tconst { answers } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tquestionAnswers: joinQuestionAnswers(question, answers),\r\n\t\tanswers,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => dispatch<any>(getQuestion(categoryId, questionId)),\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\tedit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\t\tsaveForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeQuestion(question):updateQuestion(question)),\r\n\t\tcancel: () => dispatch<any>(cancelQuestion()),\r\n\r\n\t\t// question answers\r\n\t\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(selectQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(copyQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(removeQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion } from '../types';\r\n\r\n\r\ninterface IQuestionRowProps {\r\n\tquestion: IQuestion;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => IQuestion;\r\n\tedit: (categoryId: number, questionId: number) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst QuestionRow: React.FC<IQuestionRowProps> = (props: IQuestionRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, onSelectQuestion, edit, remove } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\r\n   return (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"question-button\"\r\n\t\t\t\tonClick={() => onSelectQuestion(categoryId, questionId)}>\r\n\t\t\t\t{question.text}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered && \r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(categoryId, questionId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => remove(categoryId, questionId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { ICategory } from '../types';\r\n\r\n\r\ninterface ICategoryRowProps {\r\n\tcategory: ICategory;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tonSelectCategory: (categoryId: number) => void;\r\n}\r\n\r\nconst CategoryRow: React.FC<ICategoryRowProps> = (props: ICategoryRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { category, toggleCategory, editCategory, removeCategory, onSelectCategory } = props;\r\n\tconst {categoryId, title, questions: categories, isExpanded} = category;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} key={categoryId} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleCategory(categoryId)} \r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded?faCaretDown:faCaretRight} color='orange' size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<span className='question-group-title' onClick={() => onSelectCategory(categoryId)}>{title}</span>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editCategory(categoryId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && categories.length === 0 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeCategory(categoryId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CategoryRow\r\n\r\n","import * as React from 'react';\r\nimport { useRef } from 'react'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { DetailView } from './DetailView';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { updateCategory } from '../actions';\r\nconst color = 'blue';\r\n\r\nconst CategoryList: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tconst { categories, categoryQuestions, question,\r\n\t\tformMode, categoryIdEditing, onSelectCategory, onSelectQuestion, add, edit, remove, canEdit,\r\n\t\taddCategory, toggleCategory, editCategory, removeCategory, storeCategory, updateCategory,\r\n\t\taddAndAssignNewAnswer,\r\n\t\twho } = props;\r\n\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandCategory = (categoryId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divCategory\" + categoryId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{categories.map(category => {\r\n\t\t\t\tconst { categoryId, title, isExpanded } = category;\r\n\t\t\t\tconst categoryState = categoryQuestions.get(categoryId);\r\n\t\t\t\tconst { questions } = categoryState!;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={categoryId} style={{ paddingBottom: '5px' }}>\r\n\t\t\t\t\t\t<div style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t{categoryIdEditing === categoryId &&\r\n\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\tonBlur={(e) => updateCategory({ ...category, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{categoryIdEditing !== categoryId && (\r\n\t\t\t\t\t\t\t\t<CategoryRow\r\n\t\t\t\t\t\t\t\t\tkey={category.categoryId}\r\n\t\t\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\t\t\tonSelectCategory={onSelectCategory}\r\n\t\t\t\t\t\t\t\t\ttoggleCategory={toggleCategory}\r\n\t\t\t\t\t\t\t\t\teditCategory={editCategory}\r\n\t\t\t\t\t\t\t\t\tremoveCategory={removeCategory}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{isExpanded &&\r\n\t\t\t\t\t\t\t<div className=\"group-categories\" style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t\t{questions.map(question =>\r\n\t\t\t\t\t\t\t\t\t<QuestionRow\r\n\t\t\t\t\t\t\t\t\t\tkey={question.questionId}\r\n\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<div style={{ marginLeft: '0%' }}>\r\n\t\t\t\t\t\t\t\t\t<button className=\"button-add\" title=\"Add a new Question\" onClick={() => add(category.categoryId, '')}>\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t<div style={{ marginLeft: '1rem', textAlign: 'start' }}>\r\n\t\t\t\t<button className=\"button-add-category\" title=\"Add a new Category\" onClick={() => addCategory()}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default CategoryList\r\n\r\n","import * as React from 'react';\r\nimport { useRef, useState } from 'react'\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { DetailView } from './DetailView';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { updateCategory } from '../actions';\r\nimport { Col, Collapse, Container, Row } from 'react-bootstrap';\r\nimport CategoryList from './CategoryList';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst Page: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\t\r\n\t// const { categories, categoryQuestions, category, question,\r\n\t// \tformMode, categoryIdEditing, onSelectQuestion, add, edit, remove, canEdit,\r\n\t// \taddCategory, toggleCategory, editCategory, removeCategory, storeCategory, updateCategory,\r\n\t// \taddAndAssignNewAnswer,\r\n\t// \twho } = props;\r\n\r\n\tconst { categories, categoryQuestions, category, question,\r\n\t\tformMode, categoryIdEditing, onSelectCategory, onSelectQuestion, add, edit, remove, canEdit,\r\n\t\taddCategory, toggleCategory, editCategory, removeCategory, storeCategory, updateCategory,\r\n\t\taddAndAssignNewAnswer,\r\n\t\twho } = props;\r\n\r\n\r\n\t//const [open, setOpen] = useState(false);\r\n\tconst open = categories && (category||question)\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row style={{ border: '3px solid lightblue' }}>\r\n\t\t\t\t\t<Col md={open?6:12} lg={open?6:12} style={{ padding: '10px', backgroundColor: '#eff3f6', color: '#686c71' }}>\r\n\t\t\t\t\t\t<div style={{ border: '0px solid silver', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<h3>Categories</h3>\r\n\t\t\t\t\t\t\t{categories &&\r\n\t\t\t\t\t\t\t\t<CategoryList {...props} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* <Collapse\r\n\t\t\t\t\t\tin={open}\r\n\t\t\t\t\t\tdimension=\"width\"\r\n\t\t\t\t\t\tonEnter={() => { console.log('onEnter'); }}\r\n\t\t\t\t\t\tonEntering={() => { console.log('onEntering'); }}\r\n\t\t\t\t\t\tonEntered={() => { console.log('onEntered'); }}\r\n\t\t\t\t\t\tonExit={() => { console.log('onExit'); }}\r\n\t\t\t\t\t\tonExiting={() => { console.log('onExiting'); }}\r\n\t\t\t\t\t\tonExited={() => { console.log('onExited'); }}\r\n\t\t\t\t\t> */}\r\n\t\t\t\t\t\t<Col md={open?6:0} lg={open?6:0} style={{ backgroundColor: '#eff3f6', color: '#686c71', padding: '10px' }}>\r\n\t\t\t\t\t\t\t<div style={{ border: '0px solid silver', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t\t{/* {categories && question &&\r\n\t\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t\t{categories && question &&\r\n\t\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{categories && category &&\r\n\t\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Category</h4>\r\n\t\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* </Collapse> */}\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t{/* <DetailView\r\n\t\t\t\tcategoryId={question ? question!.categoryId : 0}\r\n\t\t\t\tquestionId={question ? question!.questionId : 0}\r\n\t\t\t\taddAndAssignNewAnswer={addAndAssignNewAnswer}\r\n\t\t\t\twho={who}\r\n\t\t\t/>\t */}\r\n\t\t\t{/* visible={isDetail} */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Page;","import * as React from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { IQuestion, ICategoriesProps, initialQuestion } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm'\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n  \r\nconst SupportPage: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { categories, categoryQuestions, question, onSelectQuestion, add, canEdit } = props;\r\n\tconsole.log('tekst:', tekst)\r\n    return (\r\n      <div className=\"name-container\">\r\n\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t<div style={{display: 'flex'}}>\r\n\t\t\t\t\t{/* Support Page tekst: {tekst} */}\r\n\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\tonSelectQuestion={onSelectQuestion} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\ttitle=\"Create a new Question\"\r\n\t\t\t\t\t\tonClick={() => { add(0, tekst??'');\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} color='lightblue' />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t{categories && question &&\r\n\t\t\t\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5]}}>\r\n\t\t\t\t\t\t\t<h4 style={{marginTop: 0, color: 'white'}}>Question</h4>\r\n\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t{/* <QuestionForm \r\n\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\tquestionAnswers={questionAnswers}\r\n\t\t\t\t\t\t\t\tanswers={answers}\r\n\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\tsaveForm={(question: IQuestion) => saveForm(question, formMode)}\r\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\r\n\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\tassignQuestionAnswer={assignQuestionAnswer}\r\n\t\t\t\t\t\t\t\tsetIsDetail={setIsDetail}\r\n\t\t\t\t\t\t\t\tsourceOptions={sourceOptions}\r\n\t\t\t\t\t\t\t\tstatusOptions={statusOptions}\r\n\t\t\t\t\t\t\t\tgroupOptions={groupOptions}\r\n\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default SupportPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory\r\n} from '../actions'\r\n\r\nimport CategoriesPage from '../components/CategoriesPage'\r\nimport SupportPage from '../components/SuportPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategory,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tisDetail\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tcategory,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\twho: topState.top.auth!.who,\r\n\t\tnavbarOpen: topState.top.navbarOpen\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => dispatch<any>(getQuestion(categoryId, questionId)),\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => {\r\n\t\t\tdispatch<any>(addQuestion(categoryId, text, canEdit))\r\n\t\t},\r\n\t\tedit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\r\n\t\t// groups\r\n\t\tonSelectCategory: (categoryId: number) => dispatch<any>(getCategory(categoryId)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\ttoggleCategory: (categoryId: number) =>  dispatch<any>(toggleCategory(categoryId)),\r\n\t\teditCategory: (categoryId: number) =>  dispatch<any>(editCategory(categoryId)),\r\n\t\tremoveCategory: (categoryId: number) => dispatch<any>(removeCategory(categoryId)),\r\n\t\tstoreCategory: (group: ICategory) => dispatch<any>(storeCategory(group)),\r\n\t\tupdateCategory: (group: ICategory) => dispatch<any>(updateCategory(group)),\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default {\r\n\tcategories: connect(mapStateToProps, mapDispatchToProps)(CategoriesPage),\r\n\tsupporter: connect(mapStateToProps, mapDispatchToProps)(SupportPage)\r\n};","import * as React from 'react';\r\n\r\nimport containers from '../Categories/containers/CategoriesPage'\r\n\r\n// type TParams = { id: string };\r\n\r\n// function Product({ match }: RouteComponentProps<TParams>) {\r\n//   return <h2>This is a page for product with ID: {match.params.id} </h2>;\r\n// }\r\n\r\nsetTimeout(() => {\r\n  const div = document.querySelector('#divKnowledge');\r\n  if (div)\r\n    div!.setAttribute('style', 'display:none')\r\n}, 10000)\r\n\r\nconst Support: React.FC<{}> = () => {\r\n  return (\r\n    <>\r\n      <h2 style={{textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>Questions &amp; Answers</h2>\r\n      <div id='divKnowledge' className='knowledge'>\r\n        <h5 style={{textAlign: 'center', color: 'blue', fontSize:'15px'}}><i>A knowledge base for sharing information. \r\n          <br/>When you record your experiences and insights, <br/>other members of your team can share info.\r\n          </i></h5>\r\n      </div>\r\n      <containers.supporter canEdit={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Support;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IAnswer } from '../types';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { Select } from '../../common/Select';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName'\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer;\r\n\tformMode: string;\r\n\toptions?: string[];\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\n\r\nconst Form: React.FC<IProps> = (props: IProps) => {\r\n\tconst formik = useFormik({\r\n\t\tenableReinitialize: true,\r\n\t\tinitialValues: {\r\n\t\t\tanswerId: props.answer.answerId,\r\n\t\t\ttext: props.answer.text,\r\n\t\t\tcreatedBy: props.answer.createdBy,\r\n\t\t\tcreated: props.answer.created,\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\ttext: Yup.string()\r\n\t\t\t\t.max(150, 'Must be 150 characters or less')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tprops.saveForm(values, props.formMode)\r\n\t\t},\r\n\t});\r\n\r\n\tconst isEdit = () => props.formMode === 'edit';\r\n\tconsole.log('RENDERING', formik.values)\r\n\r\n\treturn (\r\n\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t{props.formMode !== 'add' &&\r\n\t\t\t\t<>\r\n\t\t\t\t\t<label className=\"id\" htmlFor=\"answerId\">Answer Id: </label>\r\n\t\t\t\t\t{/* <input\r\n\t\t\t\t\t\tid=\"answerId\"\r\n\t\t\t\t\t\tname=\"answerId\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\tvalue={formik.values.answerId}\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tstyle={{ width: '50px' }}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<span id=\"answerId\">{formik.values.answerId}</span>\r\n\t\t\t\t\t{/* {formik.touched.answerId && formik.errors.answerId ? (\r\n\t\t\t\t\t\t<div>{formik.errors.answerId}</div>\r\n\t\t\t\t\t) : null} */}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\r\n\t\t\t<label htmlFor=\"text\">Answer</label>\r\n\t\t\t<textarea\r\n\t\t\t\tid=\"text\"\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\tonBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n\t\t\t\t\tif (isEdit()) formik.submitForm();\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={formik.values.text}\r\n\t\t\t\trows={2}\r\n\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.text && formik.errors.text ? (\r\n\t\t\t\t<div>{formik.errors.text}</div>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n\t\t\t{/* <span>{formik.values.createdBy.toLocaleDateString()}</span> */}\r\n\t\t\t<UserName id={formik.values.createdBy} />\r\n\t\t\t<br/>\r\n\t\t\t{/* <Select\r\n\t\t\t\tid=\"createdBy\"\r\n\t\t\t\tname=\"createdBy\"\r\n\t\t\t\toptions={props.userOptions}\r\n\t\t\t\t//onChange={formik.handleChange}\r\n\t\t\t\tonChange={(e, value) => {\r\n\t\t\t\t\tformik.setFieldValue(\"createdBy\", value)\r\n\t\t\t\t\tif (isEdit()) formik.submitForm();\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={formik.values.createdBy}\r\n\t\t\t// onChange={(gradeId: number) =>\r\n\t\t\t// \tdispatch({\r\n\t\t\t// \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n\t\t\t// \t\tstudentGradeIds: {\r\n\t\t\t// \t\t\tstudentId: student!.id,\r\n\t\t\t// \t\t\tgradeId: gradeId,\r\n\t\t\t// \t\t\tgradeName: gradesAll[gradeId].name\r\n\t\t\t// \t\t}\r\n\t\t\t// \t})\r\n\t\t\t// }\r\n\t\t\t/> */}\r\n\r\n\t\t\t<label className=\"id\" htmlFor=\"created\">Created:</label>\r\n\t\t\t{/* <input\r\n\t\t\t\tid=\"created\"\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\tvalue={formik.values.created.toLocaleDateString()}\r\n\t\t\t\tdisabled={true}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.created && formik.errors.created ? (\r\n\t\t\t\t<div>{formik.errors.created}</div>\r\n\t\t\t) : null} */}\r\n\t\t\t<span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n\t\t\t{/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n\t\t\t{!isEdit() &&\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<button onClick={() => props.cancel()}>Cancel</button>\r\n\t\t\t\t\t<button type=\"submit\">Save</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst color = 'blue';\r\n\r\nexport const AnswerForm: React.FC<IProps> = (props: IProps) => {\r\n\treturn (\r\n\t\t<div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\tbackground: COLORS[color][5],\r\n\t\t\t\t\tpadding: '0.1rem 0.1rem',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\tboxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\tmaxWidth: '90%',\r\n\t\t\t\t\t\tmargin: '0 auto',\r\n\t\t\t\t\t\tpadding: '0.5rem',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"formik-example formik-example--blue\">\r\n\t\t\t\t\t\t<Form {...props} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IAnswer } from '../types';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nexport const ListRow: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answer, usedAnswers, edit, remove } = props;\r\n\treturn (\r\n\t\t<tr key={answer.answerId} >\r\n\t\t\t<td className=\"name\">\r\n\t\t\t\t{answer.answerId}\r\n\t\t\t</td>\r\n\t\t\t<td className=\"name\">\r\n\t\t\t\t{answer.text}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\ttitle=\"Add a new Answer\"\r\n\t\t\t\t\tonClick={() => edit(answer.answerId)}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button \r\n\t\t\t\t\tdisabled={usedAnswers.map(a=>a.answerId).includes(answer.answerId)}\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove Answer\"\r\n\t\t\t\t\tonClick={() => remove(answer.answerId)}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n  }\r\n\r\n","import * as React from 'react';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\nimport { IAnswer } from '../types';\r\nimport { ListRow } from './ListRow';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nconst List: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answers, usedAnswers, edit, remove } = props;\r\n\treturn (\r\n\t\t<table width=\"100%\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Id</th>\r\n\t\t\t\t\t<th>Answer</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{ answers.map(answer => \r\n\t\t\t\t\t<ListRow\r\n\t\t\t\t\t\tkey={answer.answerId}\r\n\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n  }\r\n\r\nexport default List\r\n\r\n","import * as React from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { IAnswer } from '../types';\r\nimport { AnswerForm } from './Form'\r\nimport { ListRow } from './ListRow';\r\nimport List from './List';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { IOption } from '../../common/types';\r\nconst color = 'blue';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\r\n\tformMode: string,\r\n\tadd: () => void;\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\ntype MyParams = {\r\n\tslug: string;\r\n  };\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n\tlet { slug } = useParams<MyParams>();\r\n\t// slug = ''\r\n\tconst { answers, answer, usedAnswers, formMode, add, edit, remove, cancel, saveForm } = props;\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t{slug}\r\n\t\t\t{ answers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers at all\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{ answers.length > 0 && \r\n\t\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t\t<List answers={answers} usedAnswers={usedAnswers} edit={edit} remove={remove} />\r\n\t\t\t\t\t\t<button onClick={() => add()}>Add new</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t\t{formMode === 'add' &&\r\n\t\t\t\t\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5]}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{marginTop: 0, color: 'white'}}>New Answer</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm \r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)} \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formMode === 'edit' &&\r\n\t\t\t\t\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5]}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{marginTop: 0, color: 'white'}}>Edit Answer</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n  }\r\n\r\nexport default Page\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { AnswerActions,  addAnswer, editAnswer, removeAnswer, storeAnswer, cancelAnswer } from '../actions' // , IAddAnswer\r\n\r\nimport { IAnswer } from '../types'\r\n\r\nimport Page from '../components/Page'\r\nimport { IQuestionAnswer, ICategory } from '../../Categories/types';\r\n\r\nconst getUsedAnswers = (categories: ICategory[]) : IQuestionAnswer[]=> {\r\n\tlet questionAnswers: IQuestionAnswer[] = [];\r\n\tfor (let category of categories)\r\n\t\tfor (let question of category.questions)\r\n\t\tquestionAnswers = questionAnswers.concat(question.answers)\r\n\treturn questionAnswers;\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n\tanswers: store.answerState.answers,\r\n\tanswer: store.answerState.answer!,\r\n\tformMode: store.answerState.formMode,\r\n\tusedAnswers: getUsedAnswers(store.categoriesState.categories),\r\n\twho: store.topState.top.auth!.who\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnswerActions>) => {\r\n\treturn {\r\n\t\t//setFormMode: (formMode: string) => dispatch<any>(setFormMode(formMode)),\r\n\t\tadd: () => dispatch<any>(addAnswer()),\r\n\t\tedit: (answerId: number) => dispatch<any>(editAnswer(answerId)),\r\n\t\tremove: (answerId: number) => dispatch<any>(removeAnswer(answerId)),\r\n\t\tsaveForm: (answer: IAnswer, formMode: string) => dispatch<any>(storeAnswer(answer, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IUser } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IFormProps } from '../types'\r\nimport UserName from '../../common/containers/UserName';\r\n\r\nconst Form: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      roleId: props.user.roleId,\r\n      userId: props.user.userId,\r\n      userName: props.user.userName,\r\n      pwd: props.user.pwd,\r\n      department: props.user.department,\r\n      createdBy: props.user.createdBy,\r\n      created: props.user.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING user', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"userId\">UserId:</label>\r\n        {/* <input\r\n          id=\"userId\"\r\n          name=\"userId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.userId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.userId && formik.errors.userId ? (\r\n          <div>{formik.errors.userId}</div>\r\n        ) : null} */}\r\n        <span id=\"userId\">{formik.values.userId}</span>\r\n\r\n        <label htmlFor=\"roleId\">Role</label>\r\n        <Select\r\n          id=\"roleId\"\r\n          name=\"roleId\"\r\n          options={props.roleOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"roleId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.roleId}\r\n        />\r\n\r\n        <label htmlFor=\"userName\">Name</label>\r\n        <textarea\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.userName}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.userName && formik.errors.userName ? (\r\n          <div>{formik.errors.userName}</div>\r\n        ) : null}\r\n\r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n      {/* <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */} \r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const UserForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\tsetIsDetail\r\n} from '../actions'\r\n\r\nimport {UserForm}  from '../components/UserForm'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {usersState, tagState} = store;\r\n\tconst { roles, user, roleOptions, formMode, roleIdEditing, isDetail } = usersState; \r\n\treturn {\r\n\t\troles,\r\n\t\troleOptions,\r\n\t\tuser: user!,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\tsaveForm: (user: IUser, formMode: string) => dispatch<any>(storeUser(user, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelUser()),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IUser } from '../types';\r\n\r\n\r\ninterface IRowProps {\r\n\tuser: IUser;\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n}\r\n\r\nconst UserRow: React.FC<IRowProps> = (props: IRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { user, onSelectUser, edit, remove } = props;\r\n\tconst { roleId: roleId, userId } = user;\r\n\r\n   return (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"user-button\"\r\n\t\t\t\tonClick={() => onSelectUser(userId)}>\r\n\t\t\t\t{user.userName}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered && \r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(roleId, userId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => remove(roleId, userId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IRole } from '../types';\r\n\r\n\r\ninterface IUserRowProps {\r\n\tuserRole: IRole;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (roleId: number) => void;\r\n}\r\n\r\nconst RoleRow: React.FC<IUserRowProps> = (props: IUserRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { userRole, toggleRole, editRole, removeRole } = props;\r\n\tconst {roleId: roleId, title, users, isExpanded, color} = userRole;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} key={roleId} className=\"name\" >\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleRole(roleId)} \r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded?faCaretDown:faCaretRight} color={color} size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<span className='role-title' style={{color}}>{title}</span>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && users.length === 0 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RoleRow\r\n\r\n","import * as React from 'react';\r\nimport { useRef } from 'react'\r\n\r\nimport { IRolesProps } from '../types'\r\n\r\nimport { IUser } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport UserForm from '../containers/UserForm'\r\nimport UserRow from './UserRow';\r\nimport RoleRow from './RoleRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst UserPage: React.FC<IRolesProps> = (props: IRolesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { roles: userRoles, user,\r\n\t\tformMode, roleIdEditing: roleIdEditing, \r\n\t\tonSelectUser, add, edit, remove, canEdit,\r\n\t\taddRole: addRole, toggleRole: toggleRole, editRole: editRole, removeRole: removeRole, storeRole: storeRole,\r\n\t\tsetIsDetail, isDetail } = props;\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandRole = (roleId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divRole\" + roleId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t<hr />\r\n\t\t\t{/* <h4 style={{ textAlign: 'center' }}>Maintenance (visible only for Admins) </h4> */}\r\n\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t<h3>Users by Role</h3>\r\n\t\t\t\t\t{userRoles &&\r\n\t\t\t\t\t\tuserRoles.map(role => {\r\n\t\t\t\t\t\t\tconst { roleId: roleId, title, isExpanded, users } = role;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={roleId} style={{ paddingBottom: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t<div style={{textAlign: 'start'}}>\r\n\t\t\t\t\t\t\t\t\t\t{roleIdEditing === roleId &&\r\n\t\t\t\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => storeRole({ ...role, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t{roleIdEditing !== roleId && (\r\n\t\t\t\t\t\t\t\t\t\t\t<RoleRow\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserRole={role}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleRole={toggleRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\teditRole={editRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveRole={removeRole}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{isExpanded &&\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"group-users\" style={{marginLeft: '20px', textAlign: 'start'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={user.userId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectUser={onSelectUser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: '0%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"button-add\" title=\"Add a new User\" onClick={() => add(role.roleId, '')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd a new User\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t<div style={{ marginLeft: '1%' }}>\r\n\t\t\t\t\t\t<button className=\"button-add-category\" title=\"Add a new Section\" onClick={() => addRole()}>\r\n\t\t\t\t\t\t\tAdd a new Role\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t{userRoles && user &&\r\n\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>User</h4>\r\n\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t<span>DisplayForm</span>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<UserForm canEdit={canEdit}\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UserPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\taddRole,\r\n\teditRole,\r\n\tremoveRole,\r\n\tstoreRole,\r\n\tsetIsDetail,\r\n\ttoggleRole\r\n} from '../actions'\r\n\r\nimport UserPage from '../components/UserPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst { usersState,  tagState} = store;\r\n\tconst { roles, user, formMode, roleIdEditing, isDetail } = usersState; \r\n\treturn {\r\n\t\troles,\r\n\t\tuser: user!,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\twho: store.topState.top.auth!.who\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\t// user\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\t// groups\r\n\t\taddRole: () => dispatch<any>(addRole()),\r\n\t\ttoggleRole: (roleId: number) =>  dispatch<any>(toggleRole(roleId)),\r\n\t\teditRole: (roleId: number) =>  dispatch<any>(editRole(roleId)),\r\n\t\tremoveRole: (roleId: number) => dispatch<any>(removeRole(roleId)),\r\n\t\tstoreRole: (role: IRole) => dispatch<any>(storeRole(role)),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\r\n","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IFormProps } from '../types';\r\n//import { number } from 'yup/lib/locale';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Form: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  let { who, formMode, authError } = props;\r\n  const { userName, pwd } = who;\r\n\r\n  let navigate = useNavigate();\r\n  if (props.isAuthenticated) {\r\n    navigate('/questions');\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      userName,\r\n      pwd\r\n      //createdBy: props.top.createdBy,\r\n      //created: props.top.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      userName: Yup\r\n        .string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        //.matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]$/)\r\n        .required()\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode, props.isRegister)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING LoginForm', formik.values)\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n\r\n        {/* <label htmlFor=\"name\">User name</label> */}\r\n        <input\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          // onBlur={(e: React.FormEvent<HTMLInputElement>): void => {\r\n          //   if (isEdit() && formik.initialValues.name !== formik.values.name)\r\n          //     formik.submitForm();\r\n          // }}\r\n          value={formik.values.userName}\r\n          placeholder=\"User name\"\r\n          maxLength={16}\r\n          size={16}\r\n        // style={{ width: '40%' }}\r\n        />\r\n        {formik.touched.userName && formik.errors.userName ? (\r\n          <div>{formik.errors.userName}</div>\r\n        ) : null}\r\n\r\n        {/* <label htmlFor=\"username\">Password</label> */}\r\n        <br />\r\n        <input\r\n          id=\"pwd\"\r\n          name=\"pwd\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.pwd}\r\n          placeholder=\"password\"\r\n          // style={{ width: '40%' }}\r\n          maxLength={16}\r\n          size={16}\r\n        />\r\n        {formik.touched.pwd && formik.errors.pwd ? (\r\n          <div>{formik.errors.pwd}</div>\r\n        ) : null}\r\n\r\n        {authError &&\r\n          <div>{authError}</div>\r\n        }\r\n\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <button onClick={() => props.cancel()}>Cancel</button>}\r\n          {props.canEdit &&\r\n            <button type=\"submit\">Save</button>}\r\n        </div>\r\n\r\n      </form>\r\n\r\n      {/* <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      <span>{formik.values.created.toLocaleDateString()}</span> */}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const LoginForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  return (\r\n    <div style={{ height: '100%', padding: '5%', display: 'flex', alignItems: 'center', justifyContent: 'cen0ter'  }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n          width: '300px'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n            width: '250px'\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            {props.isRegister ? (\r\n              <span>Register</span>\r\n            ) : (\r\n              <span>Register</span>\r\n            )}\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux'; \r\n\r\nimport { register, authenticate, cancelLogin, TopActions } from '../actions'\r\n\r\nimport { LoginForm } from '../components/LoginForm';\r\nimport { ILogin, ITop } from '../types';\r\n\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\tisRegister: boolean\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => {\r\n\tconst { topState } = store;\r\n\tconst { top } = topState;\r\n\tconst { auth } = top\r\n\treturn {\r\n\t\tisAuthenticated: top.isAuthenticated,\r\n\t\tuuid: top.uuid,\r\n\t\twho: !auth\r\n\t\t\t? { userName: '', pwd:'' } \r\n\t\t\t: { userName: auth.who.userName, pwd: auth.who.pwd },\r\n\t\tauthError: top.authError,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisRegister: ownProps.isRegister,\r\n\t\tformMode: 'edit'\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (login: ILogin, formMode: string, isRegister: boolean) => dispatch<any>(isRegister?register(login):authenticate(login)),\r\n\t\tcancel: () => dispatch<any>(cancelLogin())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <p>Landing page</p>\r\n   )\r\n}\r\n\r\nexport default Landing;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAppState } from \"./store/Store\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHome, faPlus, faSurprise, faUser, faUserFriends, faSignOutAlt, faSignInAlt, faRegistered, faAnchor } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  signOut: () => void\r\n}\r\n\r\nfunction Navig({ isAuthenticated, uuid, signOut }: IProps) {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  {/* <Navbar.Brand href=\"#\">Navbar Offcanvas</Navbar.Brand> \r\n           <Navbar.Toggle aria-controls=\"offcanvasNavbar\" /> \r\n         <Nav className=\"justify-content-end flex-grow-1 pe-3\"> */}\r\n\r\n  /// defaultActiveKey=\"/questions\"\r\n  return (\r\n    <div className=\"position-sticky pt-3\">\r\n      {isAuthenticated ? (\r\n        <>\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#/supporter/promo\">\r\n                <FontAwesomeIcon icon={faSurprise} color='lightblue' />\r\n                {' '}Supporter\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#/questions\">\r\n                <FontAwesomeIcon icon={faQuestion} color='lightblue' />\r\n                {' '}Questions\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/answers/pera\">\r\n                <FontAwesomeIcon icon={faAnchor} color='lightblue' />\r\n                {' '}Answers\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/users/2\">\r\n                <FontAwesomeIcon icon={faUserFriends} color='lightblue' />\r\n                {' '}Users\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\" onClick={() => otkaciMe()}>\r\n                <FontAwesomeIcon icon={faSignOutAlt} color='lightblue' />\r\n                {' '}Sign out\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n            <span>Saved reports</span>\r\n            <a className=\"link-secondary\" href=\"#\" aria-label=\"Add a new report\">\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </a>\r\n          </h6>\r\n          <ul className=\"nav flex-column mb-2\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Current month\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Last quarter\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Social engagement\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n              {' '}Year-end sale\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <ul className=\"nav flex-column\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#/landing\">\r\n              <FontAwesomeIcon icon={faSurprise} color='lightblue' />\r\n              {' '}Landing\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#/About\">\r\n              <FontAwesomeIcon icon={faQuestion} color='lightblue' />\r\n              {' '}About\r\n            </a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/Register\">\r\n              <FontAwesomeIcon icon={faRegistered} color='lightblue' />\r\n              {' '}Register\r\n            </a>\r\n          </li> */}\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\" onClick={() => otkaciMe()}>\r\n              <FontAwesomeIcon icon={faSignInAlt} color='lightblue' />\r\n              {' '}Sign in\r\n            </a>\r\n          </li> */}\r\n        </ul>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Navig);","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAppState } from \"./store/Store\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHome, faPlus, faSurprise, faUserFriends, faSignOutAlt, faSignInAlt, faAnchor } from '@fortawesome/free-solid-svg-icons'\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faRegistered, faUser, faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Col, Collapse, Container, Form, FormControl, Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\r\nimport { IUser } from \"./user/types\";\r\nimport { IAuth } from \"./Top/types\";\r\n\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  auth?: IAuth,\r\n  open: boolean,\r\n  setOpen: (open: boolean) => void\r\n  register: () => void\r\n  signIn: () => void\r\n  signOut: () => void\r\n}\r\n\r\nfunction Header({ isAuthenticated, uuid, auth, open, setOpen, register, signIn, signOut }: IProps) {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  {/* <Navbar.Brand href=\"#\">Navbar Offcanvas</Navbar.Brand> \r\n           <Navbar.Toggle aria-controls=\"offcanvasNavbar\" /> \r\n         <Nav className=\"justify-content-end flex-grow-1 pe-3\"> */}\r\n\r\n  /// defaultActiveKey=\"/questions\"\r\n  console.log('isAuthenticated', isAuthenticated);\r\n  return (\r\n    <Navbar as=\"header\" bg=\"light\" expand=\"lg\" className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-y-0 shadow\">\r\n      <Container fluid>\r\n        <Button\r\n          onClick={() => setOpen(!open)}\r\n          aria-controls=\"example-collapse-text\"\r\n          aria-expanded={open}\r\n          size='sm'\r\n          variant=\"secondary\"\r\n        >\r\n          <FontAwesomeIcon icon={open ? faAngleDoubleLeft : faAngleDoubleRight} color='lightblue' />\r\n        </Button>\r\n        <Navbar.Brand href=\"#\">Support <i>Knowledge</i></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Form className=\"d-flex\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: '100px' }}\r\n            navbarScroll\r\n          >\r\n            {!isAuthenticated &&\r\n              <Nav.Link href=\"#/Register\">\r\n                Register\r\n              </Nav.Link>\r\n            }\r\n            {!isAuthenticated &&\r\n              <Nav.Link href=\"#action2\" onClick={() => signIn()}>\r\n                Sign In\r\n              </Nav.Link>\r\n            }\r\n\r\n            {isAuthenticated &&\r\n              <>\r\n                <Nav.Link href=\"#\" disabled>\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                  {' '}{auth?.who.userName}\r\n                </Nav.Link>\r\n\r\n                <Nav.Link href=\"#\" disabled>\r\n                  <FontAwesomeIcon icon={faCog} color='lightblue' />\r\n                </Nav.Link>\r\n                <NavDropdown title=\"\" id=\"navbarScrollingDropdown\">\r\n                  <NavDropdown.Item href=\"#action3\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action4\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  {isAuthenticated &&\r\n                    <NavDropdown.Item href=\"#action5\" onClick={() => otkaciMe()}>\r\n                      Sign out\r\n                    </NavDropdown.Item>\r\n                  }\r\n                </NavDropdown>\r\n              </>\r\n            }\r\n\r\n          </Nav>\r\n\r\n        </Navbar.Collapse>\r\n        <Button\r\n          id='btnSync'\r\n          aria-controls=\"example-collapse-text\"\r\n          size='sm'\r\n          variant=\"secondary\"\r\n        >\r\n          Sync\r\n        </Button>\r\n      </Container>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid,\r\n  auth: store.topState.top.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Header);","import React, { useCallback, useRef, useState, useEffect } from 'react';\r\n\r\n\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { connect, Provider } from 'react-redux';\r\nimport { Store, Dispatch } from 'redux';\r\n\r\nimport { IAppState } from './store/Store';\r\n\r\nimport Support from './components/Support';\r\nimport AnswersPage from './Answers/containers/Page'\r\nimport containers from './Categories/containers/CategoriesPage'\r\n\r\nimport UsersPage from './user/containers/UsersPage';\r\nimport { authenticate, unAuthenticate, TopActions, navbarToggle } from './Top/actions';\r\nimport LoginForm from './Top/containers/LoginForm';\r\nimport Landing from './components/Landing';\r\nimport { ILogin, IAuth } from './Top/types';\r\nimport Navig from './Navig';\r\nimport Navv from './Navv';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faRegistered } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Col, Collapse, Container, Form, FormControl, Nav, Row } from 'react-bootstrap';\r\nimport Header from './Header';\r\n\r\n\r\ninterface IProps {\r\n\tnavbarOpen: boolean,\r\n\tisAuthenticated: boolean | null;\r\n\tuuid: string | null;\r\n\tauth?: IAuth,\r\n\ttoggleNavbar: () => void,\r\n\tcheckAuthentication: (login: ILogin) => void;\r\n\tsignOut: () => void\r\n}\r\n\r\nconst App = ({ navbarOpen, isAuthenticated, uuid, auth, toggleNavbar, checkAuthentication, signOut }: IProps) => {\r\n\r\n\t//const [navbarOpen, setNavbarOpen] = useState(true);\r\n\tlet main: null | HTMLDivElement = null;\r\n\r\n\tconst [open, setOpen] = useState(navbarOpen);\r\n\tconst [mainMd, setMainMd] = useState(9);\r\n\tconst [mainLg, setMainLg] = useState(10);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst login = {\r\n\t\t\tuserName: 'Jack',\r\n\t\t\tpwd: 'Daniels'\r\n\t\t}\r\n\t\tcheckAuthentication(login);\r\n\t}, []);\r\n\r\n\tconst signIn = () => {\r\n\t\tconst login = {\r\n\t\t\tuserName: 'Jack',\r\n\t\t\tpwd: 'Daniels'\r\n\t\t}\r\n\t\tcheckAuthentication(login);\r\n\t}\r\n\r\n\tconst register = () => {\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t// null is the third state false/true/null in reducer\r\n\tconst app = //isAuthenticated !== null ? (  \r\n\t\t<Router>\r\n\t\t\t<Header open={open} setOpen={setOpen} register={register} signIn={signIn} signOut={signOut} />\r\n\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\tin={open}\r\n\t\t\t\t\t\tdimension=\"width\"\r\n\t\t\t\t\t\tonEnter={() => { console.log('onEnter'); setMainMd(9); setMainLg(10) }}\r\n\t\t\t\t\t\tonEntering={() => { console.log('onEntering'); }}\r\n\t\t\t\t\t\tonEntered={() => { console.log('onEntered'); }}\r\n\t\t\t\t\t\tonExit={() => { console.log('onExit'); }}\r\n\t\t\t\t\t\tonExiting={() => { console.log('onExiting'); }}\r\n\t\t\t\t\t\tonExited={() => { console.log('onExited'); setMainMd(12); setMainLg(12) }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* <Col id=\"example-collapse-text\" className=\"position-sticky pt-3\"> */}\r\n\t\t\t\t\t\t{/* <Col id=\"example-collapse-text\" className=\"position-sticky p-0 m-0 col-md-3 ms-sm-auto col-lg-2\"> */}\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tid=\"example-collapse-text\"\r\n\t\t\t\t\t\t\tmd={3}\r\n\t\t\t\t\t\t\tlg={2}\r\n\t\t\t\t\t\t\tclassName=\"p-3 m-3 ms-sm-auto sidebar\"\r\n\t\t\t\t\t\t\tstyle={{ border: '1px solid silver', backgroundColor: 'yellow' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Navig signOut={signOut} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t\t<Col id=\"main\" md={mainMd} lg={mainLg} className=\"ms-sm-auto px-md-4\">\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t\t\t\t<h1 className=\"h2\">Dashboard</h1>\r\n\t\t\t\t\t\t\t<div className=\"btn-toolbar mb-2 mb-md-0\">\r\n\t\t\t\t\t\t\t\t<div className=\"btn-group me-2\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Share</button>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Export</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\r\n\t\t\t\t\t\t\t\t\t<span data-feather=\"calendar\"></span>\r\n\t\t\t\t\t\t\t\t\tThis week\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div style={{ border: '1px solid navy' }}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Landing />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/sign-in\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={false} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/register\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={true} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/supporter/:tekst\" element={<Support />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/questions\" element={<containers.categories canEdit={true} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/answers/:slug\" element={<AnswersPage />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/:slug\" element={<UsersPage canEdit={true} />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t</Container>\r\n\r\n\t\t</Router>\r\n\t// )\r\n\t// : (\r\n\t// \tnull\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{app}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n\tnavbarOpen: store.topState.top.navbarOpen,\r\n\tisAuthenticated: store.topState.top.isAuthenticated,\r\n\tauth: store.topState.top.auth,\r\n\tuuid: store.topState.top.uuid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\ttoggleNavbar: () => dispatch<any>(navbarToggle()),\r\n\t\tcheckAuthentication: async(login: ILogin) => await dispatch<any>(authenticate(login)),\r\n\t\tsignOut: () => dispatch<any>(unAuthenticate())\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { Store } from 'redux';\r\n\r\nimport configureStore, { IAppState } from './store/Store';\r\nimport { loadCategories } from './Categories/actions';\r\nimport { getAllAnswers } from './Answers/actions';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n// import './formik/formikStyles.css';\r\nimport './index.css';\r\nimport './App.css';\r\nimport './dashboard.css';\r\n\r\nimport './formik/formikStyles.css';\r\nimport { getAllUsers, storeUser } from './user/actions';\r\nimport { getAllTags } from './roleTags/actions';\r\nimport { loadTop } from './Top/actions';\r\nimport { IUser } from './user/types';\r\nimport App from './App';\r\nimport { coolColors } from './cool-colors';\r\nimport { storeQuestion } from './Categories/actions'\r\nimport { IQuestion } from './Categories/types';\r\n\r\ninterface IProps {\r\n\tstore: Store<IAppState>;\r\n}\r\n\r\n// coolColors();\r\n\r\n// Generate the store\r\nlocalStorage.clear(); // !!!!!!!!!!!!\r\n\r\ninterface IEvt {\r\n\ttype: string;\r\n\tentity: IQuestion;\r\n}\r\n\r\n\r\nconst store = configureStore();\r\nstore.dispatch(loadCategories());\r\nstore.dispatch(getAllAnswers());\r\nstore.dispatch(getAllUsers())\r\nstore.dispatch(loadTop());\r\nstore.dispatch(getAllTags());\r\n\r\nalert('gh-pages rade!!!!')\r\n\r\nwindow.addEventListener(\"PassToBackground\", function (evt: any) {\r\n\talert('Dobio')\r\n\tconst { detail } = evt;\r\n\t/*\r\n\tentity:\r\n\t\tanswers: []\r\n\t\tcategoryId: 22\r\n\t\tcreated: \"2022-09-02T09:49:26.408Z\"\r\n\t\tcreatedBy: 101\r\n\t\tquestionId: 1006\r\n\t\tsource: 0\r\n\t\tstatus: 0\r\n\t\ttext: \"slatko\"\r\n\ttype: \"STORE_QUESTION\"\r\n\t*/\r\n\tswitch (detail.type) {\r\n\t\tcase \"STORE_QUESTION\":\r\n\t\t\tstore.dispatch(storeQuestion(detail.entity));\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n}, false);\r\n\r\n\r\nconst userIdOwner = 101;\r\nconst state = store.getState();\r\nif (state.usersState.allUsers.length === 0) {\r\n\r\n\tconst treatFirstUserAsTheOwner = async () => {\r\n\t\treturn await store.dispatch(storeUser(user, 'add'))\r\n\t};\r\n\r\n\tconst user: IUser = {\r\n\t\troleId: 11,\r\n\t\tuserId: userIdOwner,\r\n\t\tuserName: \"Jack\",\r\n\t\tpwd: \"Daniels\",\r\n\t\tdepartment: \"dept1\",\r\n\t\tcreatedBy: userIdOwner,\r\n\t\tcreated: new Date()\r\n\t}\r\n\r\n\ttreatFirstUserAsTheOwner()\r\n\t\t.then((res) => {\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<React.StrictMode>\r\n\t\t\t\t\t<Provider store={store} >\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</Provider>\r\n\t\t\t\t</React.StrictMode>,\r\n\t\t\t\tdocument.getElementById('root')\r\n\t\t\t);\r\n\t\t})\r\n\t// store.dispatch(authenticate(user))\r\n}\r\nelse {\r\n\tReactDOM.render(\r\n\t\t<React.StrictMode>\r\n\t\t\t<Provider store={store} >\r\n\t\t\t\t<App />\r\n\t\t\t</Provider>\r\n\t\t</React.StrictMode>,\r\n\t\tdocument.getElementById('root')\r\n\t);\r\n}\r\n\r\n// Render the App\r\n// ReactDOM.render(<Root store={store} />, document.getElementById(\r\n//   'root'\r\n// ) as HTMLElement);\r\n\r\n// React.StrictMode\r\n\r\nconst ApplyChangesFromOtherUser = (what: string) => {\r\n\talert(what);\r\n}\r\n\r\n"],"sourceRoot":""}